<div class="function_line">
<span class="shared" title="Shared">&#160;</span>Entity&#58;AddCallback( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Entity.AddCallback">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Entity/AddCallback" title="Special:WhatLinksHere/Entity/AddCallback">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Add a callback function to a specific event. This is used instead of hooks to avoid calling empty functions unnecessarily.
</p><p>This also allows you to use certain hooks in engine entities (non-scripted entities).
</p>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>This method does not check if the function has already been added to this object before, so if you add the same callback twice, it will be run twice! Make sure to add your callback only once.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> hook</span>
</p>
<div style="margin-left: 32px;">
The hook name to hook onto. See <a href="/page/Entity_Callbacks" title="Entity Callbacks">Entity Callbacks</a></div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_function" title="Category:function">function</a> func</span>
</p>
<div style="margin-left: 32px;">
The function to call</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a></span>
</p>
<div style="margin-left: 32px;">
<p>The callback ID that was just added, which can later be used in <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/RemoveCallback" title="Entity/RemoveCallback">RemoveCallback</a>.
</p>
Returns nothing if the passed callback function was invalid or when asking for a non-existent hook.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Adds a callback to an entity which is called every time the entity angles change.
</p>
<pre><code data-language="lua">myentity:AddCallback( &quot;OnAngleChange&quot;, function( entity, newangle )
	-- Do stuff
end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Creates watermelon prop which creates sparks on collision point whenever touches something.
</p>
<pre><code data-language="lua">local melon = ents.Create( &quot;prop_physics&quot; ) -- Spawn prop
if (&#160;!IsValid( melon ) ) then return end -- Safety first
melon:SetModel( &quot;models/props_junk/watermelon01.mdl&quot; ) -- Set watermelon model
melon:SetPos( Entity(1):GetEyeTrace().HitPos ) -- Set pos where is player looking
melon:Spawn() -- Instantiate prop

local function PhysCallback( ent, data ) -- Function that will be called whenever collision happends
	local effect = EffectData() -- Create effect data
	effect:SetOrigin( data.HitPos ) -- Set origin where collision point is
	util.Effect( &quot;cball_bounce&quot;, effect ) -- Spawn small sparky effect
end
melon:AddCallback( &quot;PhysicsCollide&quot;, PhysCallback ) -- Add Callback</code></pre>
<p><br />
</p>


