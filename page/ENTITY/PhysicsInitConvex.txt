<div class="function_line">
<span class="shared" title="Shared">&#160;</span>Entity&#58;PhysicsInitConvex( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Entity.PhysicsInitConvex">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Entity/PhysicsInitConvex" title="Special:WhatLinksHere/Entity/PhysicsInitConvex">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">3</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Initializes the physics mesh of the entity with a convex mesh defined by a table of points. The resulting mesh is the <a href="https://en.wikipedia.org/wiki/Convex_hull" class="extiw" title="wikipedia:Convex hull">convex hull</a> of all the input points. If successful, the previous physics object will be removed.
</p><p>This is the standard way of creating moving physics objects with a custom convex shape. For more complex, concave shapes, see <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/PhysicsInitMultiConvex" title="Entity/PhysicsInitMultiConvex">PhysicsInitMultiConvex</a>.
</p>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This will crash if given all <a href="/page/Global/Vector" title="Global/Vector">Vector</a>(0,0,0)s.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/3301">#3301</a></b>
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a> points</span>
</p>
<div style="margin-left: 32px;">
A table of eight <a href="/page/Category_colon_Vector" title="Category:Vector">Vectors</a>, in local coordinates, to be used in the computation of the convex mesh. Order does not matter.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a></span>
</p>
<div style="margin-left: 32px;">
Returns true on success, nil otherwise.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Creates a "box" physics mesh for the entity.
</p>
<pre><code data-language="lua">function ENT:Initialize()
	if ( CLIENT ) then return end -- We only want to run this code serverside

	local x0 = -20 -- Define the min corner of the box
	local y0 = -10
	local z0 = -5

	local x1 = 20 -- Define the max corner of the box
	local y1 = 10
	local z1 = 5

	self:PhysicsInitConvex( {
		Vector( x0, y0, z0 ),
		Vector( x0, y0, z1 ),
		Vector( x0, y1, z0 ),
		Vector( x0, y1, z1 ),
		Vector( x1, y0, z0 ),
		Vector( x1, y0, z1 ),
		Vector( x1, y1, z0 ),
		Vector( x1, y1, z1 )
	} )

	-- Set up solidity and movetype
	self:SetMoveType( MOVETYPE_VPHYSICS )
	self:SetSolid( SOLID_VPHYSICS )

	-- Enable custom collisions on the entity
	self:EnableCustomCollisions( true )
end</code></pre>
<p><br />
</p>


