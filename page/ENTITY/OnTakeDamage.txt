<div class="function_line">
<span class="server" title="Server">&#160;</span>ENTITY:OnTakeDamage( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=ENTITY.OnTakeDamage">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/ENTITY/OnTakeDamage" title="Special:WhatLinksHere/ENTITY/OnTakeDamage">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Called when the entity is taking damage.
</p>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>Calling <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/TakeDamage" title="Entity/TakeDamage">TakeDamage</a>, <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/TakeDamageInfo" title="Entity/TakeDamageInfo">TakeDamageInfo</a>, <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/DispatchTraceAttack" title="Entity/DispatchTraceAttack">DispatchTraceAttack</a>, or <a href="/page/Category_colon_Player" title="Category:Player">Player</a>:<a href="/page/Player/TraceHullAttack" title="Player/TraceHullAttack">TraceHullAttack</a> (if the entity is hit) in this hook on the victim entity can cause infinite loops since the hook will be called again. Make sure to setup recursion safeguards like the example below.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_CTakeDamageInfo" title="Category:CTakeDamageInfo">CTakeDamageInfo</a> damage</span>
</p>
<div style="margin-left: 32px;">
The damage to be applied to the entity.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>All damage taken by this entity is applied twice. This will count the damage taken as two distinctive hits as opposed to just scaling it in <a href="/page/Category_colon_GM_Hooks" title="Category:GM Hooks">GM</a>:<a href="/page/GM/EntityTakeDamage" title="GM/EntityTakeDamage">EntityTakeDamage</a>.
</p>
<pre><code data-language="lua">function ENT:OnTakeDamage( dmginfo )
	-- Make sure we're not already applying damage a second time
	-- This prevents infinite loops
	if ( not self.m_bApplyingDamage ) then
		self.m_bApplyingDamage = true
		self:TakeDamageInfo( dmginfo )
		self.m_bApplyingDamage = false
	end
end</code></pre>


