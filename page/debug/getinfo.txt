<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>debug.getinfo( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=debug.getinfo">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/debug/getinfo" title="Special:WhatLinksHere/debug/getinfo">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Returns debug information about a function.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_function" title="Category:function">function</a> funcOrStackLevel</span>
</p>
<div style="margin-left: 32px;">
<p>Takes either a function or a number representing the stack level as an argument. Stack level 0 always corresponds to the debug.getinfo call, 1 would be the function calling debug.getinfo, and so on.
</p>
Returns useful information about that function in a table.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> fields="flnSu"</span>
</p>
<div style="margin-left: 32px;">
<p>A string whose characters specify the information to be retrieved.
</p>
<ul><li> f - Populates the func field.
</li><li> l - Populates the currentline field.
</li><li> L - Populates the activelines field.
</li><li> n - Populates the name and namewhat fields - only works if stack level is passed rather than function pointer.
</li><li> S - Populates the location fields (lastlinedefined, linedefined, short_src, source and what).
</li><li> u - Populates the argument and upvalue fields (isvararg, nparams, nups)</div>
</li></ul>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a></span>
</p>
<div style="margin-left: 32px;">
A table as a <a href="/page/Structures/DebugInfo" title="Structures/DebugInfo">DebugInfo structure</a> containing information about the function you passed. Can return nil if the stack level didn't point to a valid stack frame.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Let's find out information about net.Receive, such as which file it's defined in, the line it starts and the line it ends, and if it's defined in Lua, or C plus additional information.
</p>
<pre><code data-language="lua">PrintTable( debug.getinfo( net.Receive ) )</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">[linedefined] 		= 7
[currentline] 		= -1
[func] 			= function: 0x1a8fae90
[isvararg] 		= false
[namewhat] 		=
[lastlinedefined] 	= 11
[source] 		= @lua/includes/modules/net.lua
[nups] 			= 0
[what] 			= Lua
[nparams] 		= 2
[short_src] 		= lua/includes/modules/net.lua</code></pre>


