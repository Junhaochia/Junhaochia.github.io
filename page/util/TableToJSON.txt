<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>util.TableToJSON( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=util.TableToJSON">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/util/TableToJSON" title="Special:WhatLinksHere/util/TableToJSON">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Converts a table to a JSON string.
</p>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>All integers will be converted to decimals (5 -&gt; 5.0).
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>All keys are strings in the JSON format, so all keys will be converted to strings!
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This will produce invalid JSON if the provided table contains nan or inf values.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/3561">#3561</a></b>
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a> table</span>
</p>
<div style="margin-left: 32px;">
Table to convert.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a> prettyPrint=false</span>
</p>
<div style="margin-left: 32px;">
Format and indent the JSON.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a></span>
</p>
<div style="margin-left: 32px;">
A JSON formatted string containing the serialized data</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Writes the positions and angles of every player to a txt document called playerstuff.txt
</p>
<pre><code data-language="lua">local Players = {}
for k, v in pairs(ents.GetAll()) do
	if v:IsPlayer() then -- Is a player
		Players[k] = { pos = v:GetPos(), ang = v:GetAngles() }
	end
end
	
local tab = util.TableToJSON( Players ) -- Convert the player table to JSON
file.CreateDir( &quot;jsontest&quot; ) -- Create the directory
file.Write( &quot;jsontest/playerstuff.txt&quot;, tab) -- Write to .txt</code></pre>
<p><br />
</p>


