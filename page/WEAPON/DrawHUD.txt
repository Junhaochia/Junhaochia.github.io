<div class="function_line">
<span class="client" title="Client">&#160;</span>WEAPON:DrawHUD( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=WEAPON.DrawHUD">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/WEAPON/DrawHUD" title="Special:WhatLinksHere/WEAPON/DrawHUD">What links here?</a></div>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>This hook allows you to draw on screen while this weapon is in use.
</p><p>If you want to draw a custom crosshair, consider using <a href="/page/Category_colon_WEAPON_Hooks" title="Category:WEAPON Hooks">WEAPON</a>:<a href="/page/WEAPON/DoDrawCrosshair" title="WEAPON/DoDrawCrosshair">DoDrawCrosshair</a> instead.
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Weapon:DrawHud() as defined in weapon_cs_base, with more notes
</p>
<pre><code data-language="lua">function SWEP:DrawHUD()

	-- No crosshair when ironsights is on
	if ( self.Weapon:GetNWBool( &quot;Ironsights&quot; ) ) then return end

	local x, y -- local, always

	-- If we're drawing the local player, draw the crosshair where they're aiming
	-- instead of in the center of the screen.
	if ( self.Owner == LocalPlayer() &amp;&amp; self.Owner:ShouldDrawLocalPlayer() ) then
		local tr = util.GetPlayerTrace( self.Owner )
		tr.mask = ( CONTENTS_SOLID+CONTENTS_MOVEABLE+CONTENTS_MONSTER+CONTENTS_WINDOW+CONTENTS_DEBRIS+CONTENTS_GRATE+CONTENTS_AUX ) -- List the enums that should mask the crosshair on camrea/thridperson
		local trace = util.TraceLine( tr )
		
		local coords = trace.HitPos:ToScreen()
		x, y = coords.x, coords.y

	else
		x, y = ScrW() / 2.0, ScrH() / 2.0 -- Center of screen
	end
	
	local scale = 10 * self.Primary.Cone
	local LastShootTime = self.Weapon:GetNWFloat( &quot;LastShootTime&quot;, 0 )
        -- Scale the size of the crosshair according to how long ago we fired our weapon
	scale = scale * (2 - math.Clamp( (CurTime() - LastShootTime) * 5, 0.0, 1.0 ))
	--                    R   G    B  Alpha
	surface.SetDrawColor( 0, 255, 0, 255 ) -- Sets the color of the lines we're drawing
	
-- Draw a crosshair
	local gap = 40 * scale
	local length = gap + 20 * scale
        --                 x1,        y1, x2,     y2
	surface.DrawLine( x - length, y, x - gap, y )	-- Left
	surface.DrawLine( x + length, y, x + gap, y )	-- Right
	surface.DrawLine( x, y - length, x, y - gap )	-- Top
	surface.DrawLine( x, y + length, x, y + gap )	-- Bottom

end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">Draws 4 lines for crosshairs</div>


