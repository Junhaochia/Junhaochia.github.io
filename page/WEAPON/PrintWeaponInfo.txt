<div class="function_line">
<span class="client" title="Client">&#160;</span>WEAPON:PrintWeaponInfo( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=WEAPON.PrintWeaponInfo">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/WEAPON/PrintWeaponInfo" title="Special:WhatLinksHere/WEAPON/PrintWeaponInfo">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>A convenience function that draws the weapon info box, used in <a href="/page/Category_colon_WEAPON_Hooks" title="Category:WEAPON Hooks">WEAPON</a>:<a href="/page/WEAPON/DrawWeaponSelection" title="WEAPON/DrawWeaponSelection">DrawWeaponSelection</a>.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> x</span>
</p>
<div style="margin-left: 32px;">
The x co-ordinate of box position</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> y</span>
</p>
<div style="margin-left: 32px;">
The y co-ordinate of box position</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> alpha</span>
</p>
<div style="margin-left: 32px;">
Alpha value for the box</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>As defined in weapon_base
</p>
<pre><code data-language="lua">function SWEP:PrintWeaponInfo( x, y, alpha )

	if ( self.DrawWeaponInfoBox == false ) then return end

	if (self.InfoMarkup == nil ) then
		local str
		local title_color = &quot;&lt;color=230,230,230,255&gt;&quot;
		local text_color = &quot;&lt;color=150,150,150,255&gt;&quot;
		
		str = &quot;&lt;font=HudSelectionText&gt;&quot;
		if ( self.Author&#160;!= &quot;&quot; ) then str = str .. title_color .. &quot;Author:&lt;/color&gt;\t&quot;..text_color..self.Author..&quot;&lt;/color&gt;\n&quot; end
		if ( self.Contact&#160;!= &quot;&quot; ) then str = str .. title_color .. &quot;Contact:&lt;/color&gt;\t&quot;..text_color..self.Contact..&quot;&lt;/color&gt;\n\n&quot; end
		if ( self.Purpose&#160;!= &quot;&quot; ) then str = str .. title_color .. &quot;Purpose:&lt;/color&gt;\n&quot;..text_color..self.Purpose..&quot;&lt;/color&gt;\n\n&quot; end
		if ( self.Instructions&#160;!= &quot;&quot; ) then str = str .. title_color .. &quot;Instructions:&lt;/color&gt;\n&quot;..text_color..self.Instructions..&quot;&lt;/color&gt;\n&quot; end
		str = str .. &quot;&lt;/font&gt;&quot;
		
		self.InfoMarkup = markup.Parse( str, 250 )
	end
	
	surface.SetDrawColor( 60, 60, 60, alpha )
	surface.SetTexture( self.SpeechBubbleLid )
	
	surface.DrawTexturedRect( x, y - 64 - 5, 128, 64 ) 
	draw.RoundedBox( 8, x - 5, y - 6, 260, self.InfoMarkup:GetHeight() + 18, Color( 60, 60, 60, alpha ) )
	
	self.InfoMarkup:Draw( x+5, y+5, nil, nil, alpha )
	
end</code></pre>
<p><br />
</p>


