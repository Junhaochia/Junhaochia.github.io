<div class="function_line">
<span class="shared" title="Shared">&#160;</span>ents.FindInCone( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=✓&amp;q=ents.FindInCone">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/ents/FindInCone" title="Special:WhatLinksHere/ents/FindInCone">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_4"><span class="tocnumber">5</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">6</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<div class="thumb tright"><div class="thumbinner" style="width:182px;"><a href="/page/File:ents.FindInCone.png" class="image"><img alt="" src="/images/thumb/e/e4/ents.FindInCone.png/180px-ents.FindInCone.png" width="180" height="180" class="thumbimage" /></a> <div class="thumbcaption"><div class="magnify"><a href="/page/File:ents.FindInCone.png" class="internal" title="Enlarge"><img src="/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>2D visualization of the actual shape of the cone, click to enlarge</div></div></div>
<p>Finds and returns all entities within the specified cone. Only entities whose <a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a>:<a href="/page/Entity/WorldSpaceCenter" title="Entity/WorldSpaceCenter">WorldSpaceCenter</a> is within the cone are considered to be in it.
</p><p>The "cone" is actually a conical "slice" of an axis-aligned box (see: <a href="/page/Category_colon_ents" title="Category:ents">ents</a>.<a href="/page/ents/FindInBox" title="ents/FindInBox">FindInBox</a>). The image to the right shows approximately how this function would look in 2D. Due to this, the entity may be farther than the specified range!
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>Clientside entities will not be returned by this function.
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>If there are more than 512 entities in the axis-aligned box around the origin, then the result may be incomplete!
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> origin</span>
</p>
<div style="margin-left: 32px;">
The tip of the cone.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> normal</span>
</p>
<div style="margin-left: 32px;">
Direction of the cone.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> range</span>
</p>
<div style="margin-left: 32px;">
The range of the cone/box around the origin.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_4">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> angle_cos</span>
</p>
<div style="margin-left: 32px;">
<p>The <a href="/page/math/cos" title="math/cos">cosine</a> of the angle between the center of the cone to its edges, which is half the overall angle of the cone.
</p>
1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a></span>
</p>
<div style="margin-left: 32px;">
A table of all found <a href="/page/Category_colon_Entity" title="Category:Entity">Entitys</a>.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>An example usage of this function. This example shows which entities are being returned by the function with red lines and the range with white transparent box.
</p>
<pre><code data-language="lua">local mat = Material( &quot;models/shiny&quot; )
mat:SetFloat( &quot;$alpha&quot;, 0.5 )

hook.Add( &quot;PostDrawOpaqueRenderables&quot;, &quot;conetest&quot;, function()
	local size = 200
	local dir = LocalPlayer():GetAimVector()
	local angle = math.cos( math.rad( 15 ) ) -- 15 degrees
	local startPos = LocalPlayer():EyePos()

	local entities = ents.FindInCone( startPos, dir, size, angle )

	-- draw the outer box
	local mins = Vector( -size, -size, -size )
	local maxs = Vector( size, size, size )

	render.SetMaterial( mat )
	render.DrawWireframeBox( startPos, Angle( 0, 0, 0 ), mins, maxs, color_white, true )
	render.DrawBox( startPos, Angle( 0, 0, 0 ), -mins, -maxs, color_white )

	-- draw the lines
	for id, ent in pairs( entities ) do
		render.DrawLine( ent:WorldSpaceCenter() - dir * ( ent:WorldSpaceCenter()-startPos ):Length(), ent:WorldSpaceCenter(), Color( 255, 0, 0 ) )
	end
end )</code></pre>
<p><br />
</p>


