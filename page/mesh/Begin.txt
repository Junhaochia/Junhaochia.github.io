<div class="function_line">
<span class="client" title="Client">&#160;</span>mesh.Begin( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=mesh.Begin">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/mesh/Begin" title="Special:WhatLinksHere/mesh/Begin">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Starts a new dynamic mesh. If an <a href="/page/Category_colon_IMesh" title="Category:IMesh">IMesh</a> is passed, it will use that mesh instead.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_IMesh" title="Category:IMesh">IMesh</a> mesh=nil</span>
</p>
<div style="margin-left: 32px;">
Mesh to build. This argument can be removed if you wish to build a "dynamic" mesh. See examples below.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> primitiveType</span>
</p>
<div style="margin-left: 32px;">
Primitive type, see <a href="/page/Enums/MATERIAL" title="Enums/MATERIAL">MATERIAL_ Enums</a>.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> primiteCount</span>
</p>
<div style="margin-left: 32px;">
The amount of primitives.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Draws a triangle near Vector( 0, 0, 0 ) in the map using a dynamic mesh.
</p>
<pre><code data-language="lua">local mat = Material( &quot;editor/wireframe&quot; ) -- The material (a wireframe)

local verts = { -- A table of 3 vertices that form a triangle
	{ pos = Vector( 0,  0,  0 ), u = 0, v = 0 }, -- Vertex 1
	{ pos = Vector( 10, 0,  0 ), u = 1, v = 0 }, -- Vertex 2
	{ pos = Vector( 10, 10, 0 ), u = 1, v = 1 }, -- Vertex 3
}

hook.Add( &quot;PostDrawOpaqueRenderables&quot;, &quot;MeshLibTest&quot;, function()

	render.SetMaterial( mat ) -- Apply the material
	mesh.Begin( MATERIAL_TRIANGLES, 1 ) -- Begin writing to the dynamic mesh
	for i = 1, #verts do
		mesh.Position( verts[i].pos ) -- Set the position
		mesh.TexCoord( 0, verts[i].u, verts[i].v ) -- Set the texture UV coordinates
		mesh.AdvanceVertex() -- Write the vertex
	end
	mesh.End() -- Finish writing the mesh and draw it
end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Draws a triangle near Vector( 0, 0, 0 ) in the map using a static mesh.
</p>
<pre><code data-language="lua">local mat = Material( &quot;editor/wireframe&quot; ) -- The material (a wireframe)
local obj = Mesh() -- Create the IMesh object

local verts = { -- A table of 3 vertices that form a triangle
	{ pos = Vector( 0,  0,  0 ), u = 0, v = 0 }, -- Vertex 1
	{ pos = Vector( 10, 0,  0 ), u = 1, v = 0 }, -- Vertex 2
	{ pos = Vector( 10, 10, 0 ), u = 1, v = 1 }, -- Vertex 3
}

mesh.Begin( obj, MATERIAL_TRIANGLES, 1 ) -- Begin writing to the static mesh
for i = 1, #verts do
	mesh.Position( verts[i].pos ) -- Set the position
	mesh.TexCoord( 0, verts[i].u, verts[i].v ) -- Set the texture UV coordinates
	mesh.AdvanceVertex() -- Write the vertex
end
mesh.End() -- Finish writing to the IMesh

hook.Add( &quot;PostDrawOpaqueRenderables&quot;, &quot;MeshLibTest&quot;, function()

	render.SetMaterial( mat ) -- Apply the material
	obj:Draw() -- Draw the mesh
end )</code></pre>
<p><br />
</p>


