<div class="function_line">
<span class="client" title="Client">&#160;</span>matproxy.Add( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=matproxy.Add">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/matproxy/Add" title="Special:WhatLinksHere/matproxy/Add">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Adds a material proxy.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a> MatProxyData</span>
</p>
<div style="margin-left: 32px;">
The information about the proxy. See <a href="/page/Structures/MatProxyData" title="Structures/MatProxyData">MatProxyData structure</a></div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Adds PlayerColor proxy. Example taken from lua/matproxy/player_color.lua.
</p>
<pre><code data-language="lua">matproxy.Add({
    name = &quot;PlayerColor&quot;, 
    init = function( self, mat, values )
        -- Store the name of the variable we want to set
        self.ResultTo = values.resultvar
    end,
    bind = function( self, mat, ent )
        -- If the target ent has a function called GetPlayerColor then use that
        -- The function SHOULD return a Vector with the chosen player's colour.

        -- In sandbox this function is created as a network function, 
        -- in player_sandbox.lua in SetupDataTables
       if ( ent.GetPlayerColor ) then
           mat:SetVector( self.ResultTo, ent:GetPlayerColor() )
       end
   end 
})</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">Adds PlayerColor proxy.</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Material proxy values are stored like this:
</p>
<ul><li> In the .vmt:
</li></ul>
<pre><code data-language="lua">Proxies {
    PlayerColor {
       resultVar $color2
       myVariable $color
    }
}</code></pre>
<ul><li> In Lua ( The <b>Init</b> function of <a href="/page/Structures/MatProxyData" title="Structures/MatProxyData">MatProxyData structure</a> )
</li></ul>
<pre><code data-language="lua">values = {
    resultvar = &quot;$color2&quot;
    myvariable = &quot;$color&quot;
}</code></pre>
<p><br />
</p>


