<div class="function_line">
<span class="client" title="Client">&#160;</span>Panel&#58;GetHTMLMaterial( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Panel.GetHTMLMaterial">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Panel/GetHTMLMaterial" title="Special:WhatLinksHere/Panel/GetHTMLMaterial">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">2</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Returns the panel's HTML material. Only works with <a href="/page/Category_colon_Awesomium" title="Category:Awesomium">Awesomium</a>, <a href="/page/Category_colon_HTML" title="Category:HTML">HTML</a> and <a href="/page/Category_colon_DHTML" title="Category:DHTML">DHTML</a> panels that have been fully loaded.
</p>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_IMaterial" title="Category:IMaterial">IMaterial</a></span>
</p>
<div style="margin-left: 32px;">
The HTML material used by the panel. Typically starts with "__vgui_texture_" followed by an incremental number.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Defines a new entity which can display a web page on a TV screen.
</p>
<pre><code data-language="lua">AddCSLuaFile()

ENT.Type = &quot;anim&quot;
ENT.Base = &quot;base_entity&quot;

ENT.PrintName = &quot;Web Screen&quot;
ENT.Author = &quot;Microflash&quot;
ENT.Spawnable = true

if ( CLIENT ) then
	ENT.Mat = nil
	ENT.Panel = nil
end

function ENT:Initialize()

	if ( SERVER ) then
		
		self:SetModel(&quot;models/props_phx/rt_screen.mdl&quot;)
		self:SetMoveType(MOVETYPE_VPHYSICS)
		self:SetSolid(SOLID_VPHYSICS)
		
		self:PhysicsInit(SOLID_VPHYSICS)
		
		self:Freeze()
		
	else
	
		-- Reset material and panel and load DHTML panel
		self.Mat = nil
		self.Panel = nil
		self:OpenPage()
		
	end
	
end

function ENT:Freeze()
	local phys = self:GetPhysicsObject()
	if (IsValid(phys)) then phys:EnableMotion(false) end
end

-- Load the DHTML reference panel
function ENT:OpenPage()

	-- Iff for some reason a panel is already loaded, delete it
	if(self.Panel) then
	
		self.Panel:Remove()
		self.Panel = nil
	
	end

	-- Create a web page panel and fill the entire screen
	self.Panel = vgui.Create(&quot;DHTML&quot;)
	self.Panel:Dock(FILL)
	
	-- Wiki page URL
	local url = &quot;http://wiki.garrysmod.com/page/Category_colon_Material&quot;
	
	-- Load the wiki page
	self.Panel:OpenURL(url)
	
	-- Hide the panel
	self.Panel:SetAlpha(0)
	self.Panel:SetMouseInputEnabled(false)
	
	-- Disable HTML messages
	function self.Panel:ConsoleMessage(msg) end

end

function ENT:Draw()

	-- Iff the material has already been grabbed from the panel
	if(self.Mat) then
		
		-- Apply it to the screen/model
		if(render.MaterialOverrideByIndex) then
			render.MaterialOverrideByIndex(1, self.Mat)
		else
			render.ModelMaterialOverride(self.Mat)
		end
		
	-- Otherwise, check that the panel is valid and the HTML material is finished loading
	elseif(self.Panel &amp;&amp; self.Panel:GetHTMLMaterial()) then

		-- Get the html material
		local html_mat = self.Panel:GetHTMLMaterial()
		
		-- Used to make the material fit the model screen
		-- May need to be changed iff using a different model
		-- For the multiplication number it goes in segments of 512
		-- Based off the players screen resolution
		local scale_x, scale_y = ScrW()/2048, ScrH()/1024
		
		-- Create a new material with the proper scaling and shader
		local matdata =
		{
			[&quot;$basetexture&quot;]=html_mat:GetName(),
			[&quot;$basetexturetransform&quot;]=&quot;center 0 0 scale &quot;..scale_x..&quot; &quot;..scale_y..&quot; rotate 0 translate 0 0&quot;,
			[&quot;$model&quot;]=1
		}
		-- Unique ID used for material name
		local uid = string.Replace(html_mat:GetName(), &quot;__vgui_texture_&quot;, &quot;&quot;)
		
		-- Create the model material
		self.Mat = CreateMaterial(&quot;WebMaterial_&quot;..uid, &quot;VertexLitGeneric&quot;, matdata)
	
	end

	-- Render the model
	self:DrawModel()
	
	-- Reset the material override or else everything will have a HTML material!
	render.ModelMaterialOverride(nil)

end

function ENT:OnRemove()
	-- Make sure the panel is removed too
	if(self.Panel) then self.Panel:Remove() end
end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;"><br /><br />
<a href="/page/File:Panel_GetHTMLMaterial_example1.gif" class="image"><img alt="Panel GetHTMLMaterial example1.gif" src="/images/2/29/Panel_GetHTMLMaterial_example1.gif" width="403" height="403" /></a></div>


