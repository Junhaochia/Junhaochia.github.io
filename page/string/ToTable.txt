<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>string.ToTable( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=✓&amp;q=string.ToTable">Search on GitHub</a> - <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/extensions/string.lua#L7">View Source</a> - <a href="/page/Special:WhatLinksHere/string/ToTable" title="Special:WhatLinksHere/string/ToTable">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">3</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Splits the string into characters and creates a sequential table of characters.
</p>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>As a result of the <a href="https://en.wikipedia.org/wiki/UTF-8" class="extiw" title="wikipedia:UTF-8">UTF-8</a> encoding, non-ASCII characters will be split into more than one character in the output table. Each character value in the output table will always be 1 byte.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> str</span>
</p>
<div style="margin-left: 32px;">
The string you'll turn into a table.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a></span>
</p>
<div style="margin-left: 32px;">
A sequential table where each value is a character from the given string</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Demonstrates the use of this function.
</p>
<pre><code data-language="lua">local mystring = &quot;text&quot;
PrintTable(string.ToTable(mystring))</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">1 = t
2 = e
3 = x
4 = t</code></pre>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Demonstrates how this function behaves with non-ASCII characters - in this case, Greek letters.
</p>
<pre><code data-language="lua">for k,v in ipairs(string.ToTable(&quot;abcd αβγδ&quot;)) do
	print(k, bit.tohex(string.byte(v)), v)
end</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">1	00000061	a
2	00000062	b
3	00000063	c
4	00000064	d
5	00000020	 
6	000000ce	?
7	000000b1	?
8	000000ce	?
9	000000b2	?
10	000000ce	?
11	000000b3	?
12	000000ce	?
13	000000b4	?</code></pre>


