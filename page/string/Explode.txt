<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>string.Explode( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=string.Explode">Search on GitHub</a> - <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/extensions/string.lua#L81">View Source</a> - <a href="/page/Special:WhatLinksHere/string/Explode" title="Special:WhatLinksHere/string/Explode">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Splits a string up wherever it finds the given separator.
</p><p>This is the reverse of <a href="/page/Category_colon_string" title="Category:string">string</a>.<a href="/page/string/Implode" title="string/Implode">Implode</a>.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> separator</span>
</p>
<div style="margin-left: 32px;">
The string will be separated wherever this sequence is found.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> str</span>
</p>
<div style="margin-left: 32px;">
The string to split up.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a> use_patterns</span>
</p>
<div style="margin-left: 32px;">
Set this to true if your separator is a <a href="/page/Patterns" title="Patterns">pattern</a>.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a></span>
</p>
<div style="margin-left: 32px;">
Exploded string as a numerical sequential table.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Splits a sentence into a table of the words in it.
</p>
<pre><code data-language="lua">local sentence = &quot;hello there my name is Player1&quot;
local words = string.Explode( &quot; &quot;, sentence )
PrintTable( words )</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">1 = hello
2 = there
3 = my
4 = name
5 = is
6 = Player1</code></pre>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Uses Explode to sort through words that a player says.
</p>
<pre><code data-language="lua">hook.Add( &quot;PlayerSay&quot;, &quot;GiveHealth&quot;, function( ply, text )
	local playerInput = string.Explode( &quot; &quot;, text )

	if ( playerInput[1] == &quot;!givehealth&quot; ) then 

		if ( tonumber( playerInput[2] ) ) then

			ply:SetHealth( tonumber( playerInput[2] ) )

			print( ply:Nick() .. &quot; set their health to &quot; .. playerInput[2] )

		end

	end

end)</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">Player1 set their health to 100.</code></pre>


