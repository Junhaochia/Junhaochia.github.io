<div class="function_line">
<span class="shared" title="Shared">&#160;</span>properties.Add( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=properties.Add">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/properties/Add" title="Special:WhatLinksHere/properties/Add">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Add properties to the properties module
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> name</span>
</p>
<div style="margin-left: 32px;">
A unique name used to identify the property</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a> propertyData</span>
</p>
<div style="margin-left: 32px;">
A table that defines the property. Uses the <a href="/page/Structures/PropertyAdd" title="Structures/PropertyAdd">PropertyAdd structure</a>.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Defines a property that can be used to ignite entities (from Sandbox)
</p>
<pre><code data-language="lua">properties.Add( &quot;ignite&quot;, {
	MenuLabel = &quot;#ignite&quot;, -- Name to display on the context menu
	Order = 999, -- The order to display this property relative to other properties
	MenuIcon = &quot;icon16/fire.png&quot;, -- The icon to display next to the property

	Filter = function( self, ent, ply ) -- A function that determines whether an entity is valid for this property
		if (&#160;!IsValid( ent ) ) then return false end
		if ( ent:IsPlayer() ) then return false end
		if (&#160;!CanEntityBeSetOnFire( ent ) ) then return false end
		if (&#160;!gamemode.Call( &quot;CanProperty&quot;, ply, &quot;ignite&quot;, ent ) ) then return false end

		return&#160;!ent:IsOnFire() 
	end,
	Action = function( self, ent ) -- The action to perform upon using the property ( Clientside )

		self:MsgStart()
			net.WriteEntity( ent )
		self:MsgEnd()

	end,
	Receive = function( self, length, player ) -- The action to perform upon using the property ( Serverside )
		local ent = net.ReadEntity()
		if (&#160;!self:Filter( ent, player ) ) then return end
		
		ent:Ignite( 360 )
	end 
} )</code></pre>
<p><br />
</p>


