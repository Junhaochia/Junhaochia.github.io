<div class="function_line">
<span class="shared" title="Shared">&#160;</span>GM:StartCommand( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=GM.StartCommand">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/GM/StartCommand" title="Special:WhatLinksHere/GM/StartCommand">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Allows you to change the players inputs before they are processed by the server.<br /><br />
This is basically a shared version of <a href="/page/Category_colon_GM_Hooks" title="Category:GM Hooks">GM</a>:<a href="/page/GM/CreateMove" title="GM/CreateMove">CreateMove</a>.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This function is also called for bots, making it the best solution to control them so far
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This hook is predicted, but not by usual means, this hook is called when a <a href="/page/Category_colon_CUserCmd" title="Category:CUserCmd">CUserCmd</a> is generated on the client, and on the server when it is received, so it is necessary for this hook to be called clientside even on singleplayer
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Player" title="Category:Player">Player</a> ply</span>
</p>
<div style="margin-left: 32px;">
The player</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_CUserCmd" title="Category:CUserCmd">CUserCmd</a> ucmd</span>
</p>
<div style="margin-left: 32px;">
The usercommand</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Example of how you'd control a bot using this hook.
</p><p>The example causes all bots to go kill any players they can get to with crowbars.
</p>
<pre><code data-language="lua">hook.Add( &quot;StartCommand&quot;, &quot;StartCommandExample&quot;, function( ply, cmd )

	-- If the player is not a bot or the bot is dead, do not do anything
	-- TODO: Maybe spawn the bot manually here if the bot is dead
	if (&#160;!ply:IsBot() or&#160;!ply:Alive() ) then return end

	-- Clear any default movement or actions
	cmd:ClearMovement() 
	cmd:ClearButtons()

	-- Bot has no enemy, try to find one
	if (&#160;!IsValid( ply.CustomEnemy ) ) then
		-- Scan through all players and select one not dead
		for id, pl in pairs( player.GetAll() ) do
			if (&#160;!pl:Alive() or pl == ply ) then continue end -- Don't select dead players or self as enemies 
			ply.CustomEnemy = pl
		end
		-- TODO: Maybe add a Line Of Sight check so bots won't walk into walls to try to get to their target
		-- Or add path finding so bots can find their way to enemies
	end

	-- We failed to find an enemy, don't do anything
	if (&#160;!IsValid( ply.CustomEnemy ) ) then return end

	-- Move forwards at the bots normal walking speed
	cmd:SetForwardMove( ply:GetWalkSpeed() )

	-- Aim at our enemy
	if ( ply.CustomEnemy:IsPlayer() ) then
		cmd:SetViewAngles( ( ply.CustomEnemy:GetShootPos() - ply:GetShootPos() ):GetNormalized():Angle() )
	else
		cmd:SetViewAngles( ( ply.CustomEnemy:GetPos() - ply:GetShootPos() ):GetNormalized():Angle() )
	end

	-- Give the bot a crowbar if the bot doesn't have one yet
	if ( SERVER and&#160;!ply:HasWeapon( &quot;weapon_crowbar&quot; ) ) then ply:Give( &quot;weapon_crowbar&quot; ) end

	-- Select the crowbar
	cmd:SelectWeapon( ply:GetWeapon( &quot;weapon_crowbar&quot; ) )

	-- Hold Mouse 1 to cause the bot to attack
	cmd:SetButtons( IN_ATTACK )

	-- Enemy is dead, clear our enemy so that we may acquire a new one
	if (&#160;!ply.CustomEnemy:Alive() ) then
		ply.CustomEnemy = nil
	end

end )</code></pre>
<p><br />
</p>


