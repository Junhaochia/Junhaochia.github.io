<div class="function_line">
<span class="shared" title="Shared">&#160;</span>GM:DoAnimationEvent( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=GM.DoAnimationEvent">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/GM/DoAnimationEvent" title="Special:WhatLinksHere/GM/DoAnimationEvent">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Called upon an animation event, this is the ideal place to call player animation functions such as <a href="/page/Category_colon_Player" title="Category:Player">Player</a>:<a href="/page/Player/AddVCDSequenceToGestureSlot" title="Player/AddVCDSequenceToGestureSlot">AddVCDSequenceToGestureSlot</a>, <a href="/page/Category_colon_Player" title="Category:Player">Player</a>:<a href="/page/Player/AnimRestartGesture" title="Player/AnimRestartGesture">AnimRestartGesture</a> and so on.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Player" title="Category:Player">Player</a> ply</span>
</p>
<div style="margin-left: 32px;">
Player who is being animated</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> event</span>
</p>
<div style="margin-left: 32px;">
Animation event. See <a href="/page/Enums/PLAYERANIMEVENT" title="Enums/PLAYERANIMEVENT">PLAYERANIMEVENT_ Enums</a></div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> data=0</span>
</p>
<div style="margin-left: 32px;">
The data for the event. This is interpreted as an <a href="/page/Enums/ACT" title="Enums/ACT">ACT_ Enums</a> by PLAYERANIMEVENT_CUSTOM and PLAYERANIMEVENT_CUSTOM_GESTURE, or a sequence by PLAYERANIMEVENT_CUSTOM_SEQUENCE.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a></span>
</p>
<div style="margin-left: 32px;">
The translated activity to send to the weapon. See <a href="/page/Enums/ACT" title="Enums/ACT">ACT_ Enums</a>. Return ACT_INVALID if you don't want to send an activity.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Fires a custom animation event with PLAYERANIMEVENT_ATTACK_GRENADE as the event, and 123 as the extra data on primary attack, and 321 as the secondary attack.
The player will play the item throw gesture on the primary attack, and the drop one on secondary.
</p>
<pre><code data-language="lua">function SWEP:PrimaryAttack()
	self.Owner:DoCustomAnimEvent( PLAYERANIMEVENT_ATTACK_GRENADE , 123 )
	self:SetNextPrimaryFire(CurTime() + 0.5 )
	self:SetNextSecondaryFire(CurTime() + 0.5 )
end

function SWEP:SecondaryAttack()
	self.Owner:DoCustomAnimEvent( PLAYERANIMEVENT_ATTACK_GRENADE , 321 )
	self:SetNextPrimaryFire(CurTime() + 0.5 )
	self:SetNextSecondaryFire(CurTime() + 0.5 )
end

hook.Add(&quot;DoAnimationEvent&quot; , &quot;AnimEventTest&quot; , function( ply , event , data )
	if event == PLAYERANIMEVENT_ATTACK_GRENADE then
		if data == 123 then
			ply:AnimRestartGesture( GESTURE_SLOT_GRENADE, ACT_GMOD_GESTURE_ITEM_THROW, true )
			return ACT_INVALID
		end
		
		if data == 321 then
			ply:AnimRestartGesture( GESTURE_SLOT_GRENADE, ACT_GMOD_GESTURE_ITEM_DROP, true )
			return ACT_INVALID
		end
	end
end)</code></pre>
<p><br />
</p>


