<div class="function_line">
<span class="shared" title="Shared">&#160;</span>GM:KeyPress( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=GM.KeyPress">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/GM/KeyPress" title="Special:WhatLinksHere/GM/KeyPress">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Called whenever a player pressed a key included within the IN keys.
</p><p>For a more general purpose function that handles all kinds of input, see <a href="/page/Category_colon_GM_Hooks" title="Category:GM Hooks">GM</a>:<a href="/page/GM/PlayerButtonDown" title="GM/PlayerButtonDown">PlayerButtonDown</a>
</p>
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>Due to this being a predicted hook, <a href="/page/Global/ParticleEffect" title="Global/ParticleEffect">ParticleEffects</a> created only serverside from this hook will not be networked to the client, so make sure to do that on both realms
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This hook is <a href="/page/Prediction" title="Prediction">predicted</a>. This means that in singleplayer, it will <i>not</i> be called in the Client realm.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Player" title="Category:Player">Player</a> ply</span>
</p>
<div style="margin-left: 32px;">
The player pressing the key. If running client-side, this will always be <a href="/page/Global/LocalPlayer" title="Global/LocalPlayer">LocalPlayer</a></div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> key</span>
</p>
<div style="margin-left: 32px;">
The key that the player pressed using <a href="/page/Enums/IN" title="Enums/IN">IN_ Enums</a>.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>"hi" will be printed to the console when the player presses the IN_USE (E) key.
</p>
<pre><code data-language="lua">hook.Add( &quot;KeyPress&quot;, &quot;keypress_use_hi&quot;, function( ply, key )
	if ( key == IN_USE ) then
		print( &quot;hi&quot; )
	end
end )</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">hi</code></pre>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>When a player tries to jump, they will be shot straight up in the air.
</p>
<pre><code data-language="lua">hook.Add( &quot;KeyPress&quot;, &quot;keypress_jump_super&quot;, function( ply, key )
    if ( key == IN_JUMP ) then
        ply:SetVelocity( ply:GetVelocity() + Vector( 0, 0, 1000 ) )
    end
end )</code></pre>
<p><br />
</p>


