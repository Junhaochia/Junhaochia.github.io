<div class="function_line">
<span class="server" title="Server">&#160;</span>NPC&#58;SetEnemy( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=NPC.SetEnemy">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/NPC/SetEnemy" title="Special:WhatLinksHere/NPC/SetEnemy">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Sets the target for an NPC.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Entity" title="Category:Entity">Entity</a> enemy</span>
</p>
<div style="margin-left: 32px;">
The enemy that the NPC should target</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a> newenemy=true</span>
</p>
<div style="margin-left: 32px;">
Calls <a href="/page/Category_colon_NPC" title="Category:NPC">NPC</a>:<a href="/page/NPC/SetCondition" title="NPC/SetCondition">SetCondition</a>(COND_NEW_ENEMY) if the new enemy is valid and not equal to the last enemy.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>If an NPC has no specific target, they will start to target the closest player they are hostile to, or nothing if there are none. This is run every tick on the server and can be a bottleneck if player and/or entity counts are high, so consider adding a <a href="/page/Global/CurTime" title="Global/CurTime">CurTime</a> cooldown if you plan on using this in-game.
</p>
<pre><code data-language="lua">hook.Add( &quot;Think&quot;, &quot;NPCAutoSeekPlayer&quot;, function()
	local npcs = ents.GetAll()
	local plys = player.GetAll()
	local plyCount = #plys

	-- No point trying to give NPCs a player when there are none
	if ( plyCount == 0 ) then
		return
	end

	-- Loop over all entities and check for NPCs
	for i = 1, #npcs do
		local npc = npcs[ i ]

		-- If this entity is an NPC without an enemy, give them one
		if ( npc:IsNPC() &amp;&amp;&#160;!IsValid( npc:GetEnemy() ) ) then
			local curPly = nil			-- Closest player
			local curPlyPos = nil		-- Position of closest player
			local curDist = math.huge	-- Lowest distance between npc and player
			
			local npcPos = npc:GetPos()	-- Position of the NPC

			-- Loop over all players to check their distance from the NPC
			for i = 1, plyCount do
				local ply = plys[ i ]

				-- Only consider players that this NPC hates
				if ( npc:Disposition( ply ) == D_HT ) then
					-- TODO: You can optimise looking up each player's position (constant)
					-- for every NPC by generating a table of:
					--- key = player identifier (entity object, UserID, EntIndex, etc.)
					--- value = player's position vector
					-- for the first NPC that passes to this part of the code,
					-- then reuse it for other NPCs
					local plyPos = ply:GetPos()
					
					-- Use DistToSqr for distance comparisons since
					-- it's more efficient than Distance, and the
					-- non-squared distance isn't needed for anything
					local dist = npcPos:DistToSqr( plyPos )

					-- If the new distance is lower, update the player information
					if ( dist &lt; curDist ) then
						curPly = ply
						curPlyPos = plyPos
						curDist = dist
					end
				end
			end

			-- curPly is guarenteed to be valid since this code
			-- will only run if there is at least one player
			npc:SetEnemy( curPly )
			npc:UpdateEnemyMemory( curPly, curPlyPos )
		end
	end
end )</code></pre>
<p><br />
</p>


