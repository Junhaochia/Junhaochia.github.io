<div class="function_line">
<span class="shared" title="Shared">&#160;</span>Vector&#58;Dot( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Vector.Dot">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Vector/Dot" title="Special:WhatLinksHere/Vector/Dot">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">3</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_3"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_3"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Returns the <a href="https://en.wikipedia.org/wiki/Dot_product#Geometric_definition" class="extiw" title="wikipedia:Dot product">dot product</a> of this vector and the passed one.
</p><p>The dot product of two vectors is the product of their magnitudes (lengths), and the cosine of the angle between them:
</p>
<dl><dd><b>a &#183; b</b> = &#124;<b>a</b>&#124; &#124;<b>b</b>&#124; cos(&#952;)
</dd></dl>
<p>where <b>a</b> and <b>b</b> are vectors. See <a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a>:<a href="/page/Vector/Length" title="Vector/Length">Length</a> for obtaining magnitudes.
</p><p>A dot product returns just the cosine of the angle if both vectors are normalized, and zero if the vectors are at right angles to each other.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> otherVector</span>
</p>
<div style="margin-left: 32px;">
The vector to calculate the dot product with</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a></span>
</p>
<div style="margin-left: 32px;">
The dot product between the two vectors</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Get the angle of two opposite normalized vectors.
</p>
<pre><code data-language="lua">local a = Vector(0, 1, 0)
local b = Vector(0, -1, 0)

local dot = a:Dot(b) -- returns the cos(ang) of the two vectors because they're both of length 1
print(&quot;Radians&quot;, math.acos(dot)) -- the inverse of the cosine to get the angle
print(&quot;Degrees&quot;, math.deg(math.acos(dot))) -- Convert radians to degrees</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">Radians 3.1415926535898
Degrees 180</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Calculates whether the player is looking in the direction of an entity. This is often faster than traces, but it produces a slightly different result.
</p><p>The player is looking in the direction of the entity if the angle between the aimvector and the vector from the player to the entity is less than 45 degrees (or pi / 8 radians).
</p>
<pre><code data-language="lua">local directionAng = math.pi / 8 
local aimvector = ply:GetAimVector()
-- The vector that goes from the player's shoot pos to the entity's position
local entVector = ent:GetPos() - ply:GetShootPos() 
local dot = aimvector:Dot(entVector) / entVector:Length()
print(dot &lt; directionAng)</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">This script will say if the player is looking in the direction of the entity.</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_3">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_3">Example</span></h2>
<p>A function to make sure the player is looking somewhere.
</p>
<pre><code data-language="lua">function IsLookingAt( ply, targetVec )
 return ply:GetAimVector():Dot( ( targetVec - ply:GetPos() + Vector(70) ):GetNormalized() ) &lt; 0.95 
end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">Returns true if ply is looking at (or close to) the target.</div>


