<div class="function_line">
<span class="shared" title="Shared">&#160;</span>net.WriteVector( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=net.WriteVector">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/net/WriteVector" title="Special:WhatLinksHere/net/WriteVector">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Appends a vector to the current net message.
Vectors sent by this function are compressed, which may result in precision loss. XYZ components greater than 16384 or less than -16384 are irrecoverably altered (most significant bits are trimmed) and precision after the decimal point is low.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> vector</span>
</p>
<div style="margin-left: 32px;">
The vector to be sent.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Create a serverside command to send a vector to all clients, and a function to receive the vector on the clientside. This example displays the vector compression discussed above.
</p>
<pre><code data-language="lua">if SERVER then

    util.AddNetworkString(&quot;testingvecs&quot;)
    function testvecs_sv()
        net.Start(&quot;testingvecs&quot;)
        net.WriteVector(Vector(10000, 20000, -20000.123456789))
        net.Broadcast()
    end
    concommand.Add(&quot;dovectest&quot;, testvecs_sv)

elseif CLIENT then

    function testvecs_cl(len)
        print(&quot;RECV: vec = &quot; .. tostring(net.ReadVector()) .. &quot;\n&quot;)
    end
    net.Receive(&quot;testingvecs&quot;, testvecs_cl)

end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">RECV: vec = 10000.000000 3616.000000 -3616.093750</div>


