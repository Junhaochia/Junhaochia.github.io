<div class="function_line">
<span class="client_m" title="Client and Menu">&#160;</span>surface.DrawTexturedRectUV( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=surface.DrawTexturedRectUV">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/surface/DrawTexturedRectUV" title="Special:WhatLinksHere/surface/DrawTexturedRectUV">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_4"><span class="tocnumber">5</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_5"><span class="tocnumber">6</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_6"><span class="tocnumber">7</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_7"><span class="tocnumber">8</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_8"><span class="tocnumber">9</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">10</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">10.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">11</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">11.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Draws a textured rectangle with a repeated or partial texture.
</p><p>u and v refer to texture coordinates.
</p>
<ul><li> (u, v) = (0, 0) is the top left
</li><li> (u, v) = (1, 0) is the top right
</li><li> (u, v) = (1, 1) is the bottom right
</li><li> (u, v) = (0, 1) is the bottom left
</li></ul>
<p>Using a start point of (1, 0) and an end point to (0, 1), you can draw an image flipped horizontally, same goes with other directions. Going above 1 will tile the texture. Negative values are allowed as well.
</p><p>Here's a helper image: <a rel="nofollow" class="external free" href="https://i.imgur.com/SIKlpp4.png">http://i.imgur.com/SIKlpp4.png</a>
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>If you are using a .png image, you need supply the "noclamp" flag as second parameter for <a href="/page/Global/Material" title="Global/Material">Material</a> if you intend to use tiling.
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>If you find that surface.DrawTexturedRectUV is getting your texture coordinates (u0, v0), (u1, v1) wrong and you're rendering with a material created with <a href="/page/Global/CreateMaterial" title="Global/CreateMaterial">CreateMaterial</a>, try adjusting them with the following code:
</p>
<pre><code data-language="lua">
local du = 0.5 / 32 -- half pixel anticorrection
local dv = 0.5 / 32 -- half pixel anticorrection
local u0, v0 = (u0 - du) / (1 - 2 * du), (v0 - dv) / (1 - 2 * dv)
local u1, v1 = (u1 - du) / (1 - 2 * du), (v1 - dv) / (1 - 2 * dv)
</code></pre>
<p><b>Explanation:</b><br />
surface.DrawTexturedRectUV tries to correct the texture coordinates by half a pixel (something to do with sampling) and computes the correction using IMaterial::GetMappingWidth()/GetMappingHeight(). If the material was created without a $basetexture, then GetMappingWidth()/GetMappingHeight() uses the width and height of the error material (which is 32x32).
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This is a rendering function that requires a 2D rendering context.<br />This means that it will only work in <a href="/page/Category_colon_2D_Rendering_Hooks" title="Category:2D Rendering Hooks">hooks with a 2D rendering context</a>.
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>The UV offsets might require (sub-)pixel correction for accurate tiling results.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/3173">#3173</a></b>
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> x</span>
</p>
<div style="margin-left: 32px;">
The X integer coordinate.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> y</span>
</p>
<div style="margin-left: 32px;">
The Y integer coordinate.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> width</span>
</p>
<div style="margin-left: 32px;">
The integer width of the rectangle.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_4">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> height</span>
</p>
<div style="margin-left: 32px;">
The integer height of the rectangle.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_5">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> startU</span>
</p>
<div style="margin-left: 32px;">
The U texture mapping of the rectangle origin.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_6">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> startV</span>
</p>
<div style="margin-left: 32px;">
The V texture mapping of the rectangle origin.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_7">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> endU</span>
</p>
<div style="margin-left: 32px;">
The U texture mapping of the rectangle end.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_8">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> endV</span>
</p>
<div style="margin-left: 32px;">
The V texture mapping of the rectangle end.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Demonstrates the function usage.
</p>
<pre><code data-language="lua">local mat = Material( &quot;gui/tool.png&quot; )
hook.Add( &quot;HUDPaint&quot;, &quot;DrawTexturedRectUV_example1&quot;, function()
	surface.SetDrawColor( color_white )
	surface.SetMaterial( mat )

	surface.DrawTexturedRect( 25, 25, 100, 100 )
	surface.DrawTexturedRectUV( 25, 130, 100, 100, 0, 0, 1, 1 ) -- Exactly same as above line

	-- Draws right half of the texture
	-- Note that we also change the width of the rectangle to avoid stetcing of the texture
	-- This is for demonstration purposes, you can do whatever it is you need
	surface.DrawTexturedRectUV( 130, 130, 50, 100, 0.5, 0, 1, 1 )
end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Paints repeated texture over a panel
</p>
<pre><code data-language="lua">function PANEL:Paint( w, h )
	-- Size of your texture, texW - width, texH - height
	local texW = 16
	local texH = 16

	surface.SetMaterial( Material( &quot;icon16/box.png&quot;, &quot;noclamp&quot; ) )
	surface.SetDrawColor( color_white )
	surface.DrawTexturedRectUV( 0, 0, w, h, 0, 0, w / texW, h / texH )
end</code></pre>
<p><br />
</p>


