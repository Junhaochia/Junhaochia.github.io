<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>ErrorNoHalt( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=ErrorNoHalt">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Global/ErrorNoHalt" title="Special:WhatLinksHere/Global/ErrorNoHalt">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Throws a Lua error but does not break out of the current call stack.
This function will not print a stack trace like a normal error would.
Essentially similar if not equivalent to <a href="/page/Global/Msg" title="Global/Msg">Msg</a>.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_vararg" title="Category:vararg">vararg</a> arguments</span>
</p>
<div style="margin-left: 32px;">
Converts all arguments to strings and prints them with no spacing.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>An example of the use of this function
</p>
<pre><code data-language="lua">local num = 11
if ( num &lt;= 10 and num &gt;= 0 ) then
	print( &quot;The number is&quot;, num )
else
	ErrorNoHalt( &quot;Number out of range!\n&quot; )
	print(&quot;This line will be printed&quot;)
end</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">Number out of range!
This line will be printed</code></pre>


