<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>ipairs( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=ipairs">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Global/ipairs" title="Special:WhatLinksHere/Global/ipairs">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">3</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Returns_2"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Returns_3"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Returns an iterator function for a for loop, to return ordered key-value pairs from a table.
</p><p>This will only iterate though <b>numerical</b> keys, and these must also be <b>sequential</b>; starting at 1 with no gaps.
</p><p>For unordered pairs, see <a href="/page/Global/pairs" title="Global/pairs">pairs</a>.<br />
For pairs sorted by key in alphabetical order, see <a href="/page/Global/SortedPairs" title="Global/SortedPairs">SortedPairs</a>.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a> tab</span>
</p>
<div style="margin-left: 32px;">
The table to iterate over.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_function" title="Category:function">function</a></span>
</p>
<div style="margin-left: 32px;">
The iterator function.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns_2">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_table" title="Category:table">table</a></span>
</p>
<div style="margin-left: 32px;">
The table being iterated over</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns_3">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a></span>
</p>
<div style="margin-left: 32px;">
The origin index <b>=0</b></div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Demonstrates how this differs from <a href="/page/Global/pairs" title="Global/pairs">pairs</a>.
</p>
<pre><code data-language="lua">local tbl = { two = 2, one = 1, &quot;alpha&quot;, &quot;bravo&quot;, [3] = &quot;charlie&quot;, [5] = &quot;echo&quot;, [6] = &quot;foxtrot&quot; }

print( &quot;pairs:&quot; )
for k, v in pairs( tbl ) do
	print( k, v )
end
print( &quot;\nipairs:&quot; )
for k, v in ipairs( tbl ) do
	print( k, v )
end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;"><pre><code data-language="lua">pairs:
1	alpha
2	bravo
3	charlie
5	echo
6	foxtrot
one	1
two	2

ipairs:
1	alpha
2	bravo
3	charlie</code></pre></div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>From <i>UpdateUI</i> in <a rel="nofollow" class="external text" href="https://github.com/garrynewman/garrysmod/blob/master/garrysmod/lua/includes/modules/undo.lua#L43">undo.lua</a>, this adds the first 32 undo entries to the <i>Undo</i> panel in the spawnmenu.
</p>
<pre><code data-language="lua">local NUM = 32
local Count = 0
for k, v in ipairs( ClientUndos ) do
	local Item = ComboBox:AddItem( tostring( v.Name ) )
	Item.DoClick = function() RunConsoleCommand( &quot;gmod_undonum&quot;, tostring( v.Key ) ) end

	Count = Count + 1
	if ( Count &gt; NUM ) then break end
end</code></pre>
<p><br />
</p>


