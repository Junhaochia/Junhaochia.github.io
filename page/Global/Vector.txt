<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>Vector( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Vector">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Global/Vector" title="Special:WhatLinksHere/Global/Vector">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Creates a <a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> object.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This function creates a new unique object. It's a good practice to localize your vectors.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> x=0</span>
</p>
<div style="margin-left: 32px;">
<p>The x component of the vector.<br />
If this is a <a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a>, this function will return a copy of the given vector.<br />
If this is a <a href="/page/Category_colon_string" title="Category:string">string</a>, this function will try to parse the string as a vector. If it fails, it returns a 0 vector.
</p>
(See examples)</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> y=0</span>
</p>
<div style="margin-left: 32px;">
The y component of the vector.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> z=0</span>
</p>
<div style="margin-left: 32px;">
The z component of the vector.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a></span>
</p>
<div style="margin-left: 32px;">
The created vector object.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Creates a vector and prints the value to the console.
</p>
<pre><code data-language="lua">print( Vector( 1, 2, 3 ) )
print( Vector( &quot;4 5 6&quot; ) )
local test = Vector( 7, 8, 9 )
print( Vector( test ) )

print( Vector( &quot;4 5 test&quot; ) )
print( Vector() )</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;"><pre><code data-language="lua">1.000000 2.000000 3.000000
4.000000 5.000000 6.000000
7.000000 8.000000 9.000000

0.000000 0.000000 0.000000
0.000000 0.000000 0.000000</code></pre></div>


