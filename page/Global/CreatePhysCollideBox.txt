<div class="function_line">
<span class="shared" title="Shared">&#160;</span>CreatePhysCollideBox( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=CreatePhysCollideBox">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Global/CreatePhysCollideBox" title="Special:WhatLinksHere/Global/CreatePhysCollideBox">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Creates a new <a href="/page/Category_colon_PhysCollide" title="Category:PhysCollide">PhysCollide</a> from the given bounds.
</p>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This fails to create planes or points - no components of the mins or maxs can be the same.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/3568">#3568</a></b>
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> mins</span>
</p>
<div style="margin-left: 32px;">
Min corner of the box. This is not automatically ordered with the maxs and must contain the smallest vector components. See <a href="/page/Global/OrderVectors" title="Global/OrderVectors">OrderVectors</a>.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Vector" title="Category:Vector">Vector</a> maxs</span>
</p>
<div style="margin-left: 32px;">
Max corner of the box. This is not automatically ordered with the mins and must contain the largest vector components.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_PhysCollide" title="Category:PhysCollide">PhysCollide</a></span>
</p>
<div style="margin-left: 32px;">
The new PhysCollide. This will be a NULL PhysCollide (<a href="/page/Category_colon_PhysCollide" title="Category:PhysCollide">PhysCollide</a>:<a href="/page/PhysCollide/IsValid" title="PhysCollide/IsValid">IsValid</a> returns false) if given bad vectors or no more PhysCollides can be created in the physics engine.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>A box that interacts correctly with VPhysics objects and player movement.
</p>
<pre><code data-language="lua">AddCSLuaFile()

DEFINE_BASECLASS( &quot;base_anim&quot; )

ENT.PrintName = &quot;Cube&quot;
ENT.Spawnable = true

ENT.Mins = Vector( -16, -16, -16 )
ENT.Maxs = Vector(  16,  16,  16 )

function ENT:Initialize()
    self.PhysCollide = CreatePhysCollideBox( self.Mins, self.Maxs )
    self:SetCollisionBounds( self.Mins, self.Maxs )

    if SERVER then
        self:PhysicsInitBox( self.Mins, self.Maxs )
        self:SetSolid( SOLID_VPHYSICS )
        self:PhysWake()
    end

    if CLIENT then
        self:SetRenderBounds( self.Mins, self.Maxs )
    end

    self:EnableCustomCollisions( true )
    self:DrawShadow( false )
end

-- Handles collisions against traces. This includes player movement.
function ENT:TestCollision( startpos, delta, isbox, extents )
    if not IsValid( self.PhysCollide ) then
        return
    end

    -- TraceBox expects the trace to begin at the center of the box, but TestCollision is bad
    local max = extents
    local min = -extents
    max.z = max.z - min.z
    min.z = 0

    local hit, norm, frac = self.PhysCollide:TraceBox( self:GetPos(), self:GetAngles(), startpos, startpos + delta, min, max )

    if not hit then
        return
    end

    return { 
        HitPos = hit,
        Normal  = norm,
        Fraction = frac,
    }
end

function ENT:Draw()
    render.DrawWireframeBox( self:GetPos(), self:GetAngles(), self.Mins, self.Maxs, Color( 255, 0, 0 ), true )
end</code></pre>
<p><br />
</p>


