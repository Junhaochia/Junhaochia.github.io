<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>xpcall( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=xpcall">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/Global/xpcall" title="Special:WhatLinksHere/Global/xpcall">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Returns_2"><span class="tocnumber">6</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Attempts to call the first function. If the execution succeeds, this returns <i>true</i> followed by the returns of the function. If execution fails, this returns <i>false</i> and the second function is called with the error message.
</p><p>Unlike in <a href="/page/Global/pcall" title="Global/pcall">pcall</a>, the stack is not unwound and can therefore be used for stack analyses with the <a href="/page/Category_colon_debug" title="Category:debug">debug library</a>.
</p>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>Using this function with <a href="/page/Global/include" title="Global/include">include</a> will break autorefresh.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/1976">#1976</a></b>
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This cannot stop errors from hooks called from the engine.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/2036">#2036</a></b>
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This does not stop <a href="/page/Global/Error" title="Global/Error">Error</a> and <a href="/page/Global/ErrorNoHalt" title="Global/ErrorNoHalt">ErrorNoHalt</a> from sending error messages to the server (if called clientside) or calling the <a href="/page/Category_colon_GM_Hooks" title="Category:GM Hooks">GM</a>:<a href="/page/GM/OnLuaError" title="GM/OnLuaError">OnLuaError</a> hook. The success boolean returned will always return true and thus you will not get the error message returned. <a href="/page/Global/error" title="Global/error">error</a> does not exhibit these behaviours.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/2498">#2498</a></b>
</p>
</td></tr></table>
<table class="gmodwiki_note bug_note">
<tr>
<td>BUG
</td>
<td>
<p>This does not stop errors incurred by <a href="/page/Global/include" title="Global/include">include</a>.
</p><p><b>Issue Tracker: <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod-issues/issues/3112">#3112</a></b>
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_function" title="Category:function">function</a> func</span>
</p>
<div style="margin-left: 32px;">
The function to call initially.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_function" title="Category:function">function</a> errorCallback</span>
</p>
<div style="margin-left: 32px;">
<p>The function to be called if execution of the first fails; the error message is passed as a string.
</p>
You cannot throw an <a href="/page/Global/error" title="Global/error">error</a>() from this callback: it will have no effect (not even stopping the callback).</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_vararg" title="Category:vararg">vararg</a> arguments</span>
</p>
<div style="margin-left: 32px;">
Arguments to pass to the initial function.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a></span>
</p>
<div style="margin-left: 32px;">
Status of the execution; <i>true</i> for success, <i>false</i> for failure.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns_2">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_vararg" title="Category:vararg">vararg</a></span>
</p>
<div style="margin-left: 32px;">
The returns of the first function if execution succeeded, otherwise the <b>first</b> return value of the error callback.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Using xpcall to catch an error.
</p>
<pre><code data-language="lua">local function test()
	aisj()
end

local function catch( err )
	print( &quot;ERROR: &quot;, err )
end

print( &quot;Output: &quot;, xpcall( test, catch ) )</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;"><br /><br /><samp>ERROR: &#9;lua/wiki/xpcall_example.lua:2: attempt to call global 'aisj' (a nil value)
Output:&#9;false &#9;nil</samp></div>


