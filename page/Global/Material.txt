<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>Material( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Material">Search on GitHub</a> - <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/util.lua#L17-L30">View Source</a> - <a href="/page/Special:WhatLinksHere/Global/Material" title="Special:WhatLinksHere/Global/Material">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">4</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Returns_2"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Either returns the material with the given name, or loads the material interpreting the first argument as the path.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>When using .png or .jpg textures, try to make their sizes Power Of 2 (1, 2, 4, 8, 16, 32, 64, etc). While images are no longer scaled to Power of 2 sizes since February 2019, it is a good practice for things like icons, etc.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> materialName</span>
</p>
<div style="margin-left: 32px;">
<p>The material name or path. The path is relative to the <b>materials/</b> folder. You do not need to add <b>materials/</b> to your path.
</p><p>To retrieve a Lua material created with <a href="/page/Global/CreateMaterial" title="Global/CreateMaterial">CreateMaterial</a>, just prepend a "!" to the material name.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>Since paths are relative to the materials folder, resource paths like ../data/MyImage.jpg will work since ".." translates to moving up a parent directory in the file tree.
</p>
</td></tr></table></div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> pngParameters=nil</span>
</p>
<div style="margin-left: 32px;">
<p>A string containing space separated keywords which will be used to add material parameters.
</p><p>See <a href="/page/Material_Parameters" title="Material Parameters">Material Parameters</a> for more information.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>This feature only works when importing .png or .jpeg image files
</p>
</td></tr></table></div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_IMaterial" title="Category:IMaterial">IMaterial</a></span>
</p>
<div style="margin-left: 32px;">
Generated material</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns_2">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a></span>
</p>
<div style="margin-left: 32px;">
How long it took for the function to run</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Creates a PNG material with noclamp and smooth parameters set and then draws on screen.
</p><p>In this example the .png file is located in <b>materials/vgui/wave.png</b>
</p>
<pre><code data-language="lua">local wave = Material( &quot;vgui/wave.png&quot;, &quot;noclamp smooth&quot; )

hook.Add( &quot;HUDPaint&quot;, &quot;HUDPaint_DrawATexturedBox&quot;, function()
	surface.SetMaterial( wave )
	surface.SetDrawColor( 255, 255, 255, 255 )
	surface.DrawTexturedRect( 50, 50, 128, 128 )
end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Acquires and uses one of the <a href="/page/Post-Processing_Materials" title="Post-Processing Materials">Post-Processing Materials</a> to make the screen darker and more saturated
</p>
<pre><code data-language="lua">local mat_color = Material( &quot;pp/colour&quot; )  -- used outside of the hook for performance

hook.Add(&quot;RenderScreenspaceEffects&quot;, &quot;ColorExample&quot;, function()
	render.UpdateScreenEffectTexture()

	mat_color:SetTexture( &quot;$fbtexture&quot;, render.GetScreenEffectTexture() )

	mat_color:SetFloat( &quot;$pp_colour_addr&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_addg&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_addb&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_mulr&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_mulg&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_mulb&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_brightness&quot;, 0 )
	mat_color:SetFloat( &quot;$pp_colour_contrast&quot;, 0.5 )
	mat_color:SetFloat( &quot;$pp_colour_colour&quot;, 5 )

	render.SetMaterial( mat_color )
	render.DrawScreenQuad()
end )</code></pre>
<p><br />
</p>


