<div class="function_line">
<span class="shared_m" title="Shared and Menu">&#160;</span>Either( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=Either">Search on GitHub</a> - <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/util.lua#L359-L362">View Source</a> - <a href="/page/Special:WhatLinksHere/Global/Either" title="Special:WhatLinksHere/Global/Either">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>An 'if then else'. This is <i>almost</i> equivalent to (<i>condition</i> and <i>truevar</i> or <i>falsevar</i>) in Lua. The difference is that if <i>truevar</i> evaluates to false, the plain Lua method stated would return <i>falsevar</i> regardless of <i>condition</i> whilst this function would take <i>condition</i> into account.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_any" title="Category:any">any</a> condition</span>
</p>
<div style="margin-left: 32px;">
The condition to check if true or false.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_any" title="Category:any">any</a> truevar</span>
</p>
<div style="margin-left: 32px;">
If the condition isn't nil/false, returns this value.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_any" title="Category:any">any</a> falsevar</span>
</p>
<div style="margin-left: 32px;">
If the condition is nil/false, returns this value.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_any" title="Category:any">any</a></span>
</p>
<div style="margin-left: 32px;">
The result.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>The following two <i>print</i> statements have identical results.
</p>
<pre><code data-language="lua">local ply = Entity( 1 )
print( &quot;Player &quot; .. Either( ply:IsAdmin(), &quot;is&quot;, &quot;is not&quot; ) .. &quot; an admin&quot; )

print( &quot;Player &quot; .. ( ply:IsAdmin() and &quot;is&quot; or &quot;is not&quot; ) .. &quot; an admin&quot; )</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">If Player 1 is admin, it will print "Player is an admin".</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Plain Lua alias version.
</p>
<pre><code data-language="lua">print(&quot;You are: &quot;..( LocalPlayer():Alive() and &quot;alive&quot; or &quot;dead&quot; ))

// conditional:

print( &quot;Halflife? &quot;..( (LocalPlayer():Health()==50) and &quot;halflife&quot; or &quot;not halflife&quot;) )</code></pre>
<p><b>Output:</b>
</p>
<pre class="plain">You are alive

Halflife? not halflife</code></pre>


