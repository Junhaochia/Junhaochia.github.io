<div class="function_line">
<span class="client" title="Client">&#160;</span>render.OverrideBlendFunc( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=render.OverrideBlendFunc">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/render/OverrideBlendFunc" title="Special:WhatLinksHere/render/OverrideBlendFunc">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_4"><span class="tocnumber">5</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_5"><span class="tocnumber">6</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<div class="deprecatedfunc"><span>This feature is deprecated.</span><br />
You should avoid using it as it may be removed in a future version.<br /><br />Use <a href="/page/Category_colon_render" title="Category:render">render</a>.<a href="/page/render/OverrideBlend" title="render/OverrideBlend">OverrideBlend</a> instead.</div>
<p>Overrides the internal graphical functions used to determine the final color and alpha of a rendered texture.
</p><p>See also <a href="/page/Category_colon_render" title="Category:render">render</a>.<a href="/page/render/OverrideAlphaWriteEnable" title="render/OverrideAlphaWriteEnable">OverrideAlphaWriteEnable</a>.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>Doing <a href="/page/Category_colon_surface" title="Category:surface">surface library</a> draw calls with alpha set to 0 is a no-op and will never have any effect.
</p>
</td></tr></table>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_boolean" title="Category:boolean">boolean</a> enabled</span>
</p>
<div style="margin-left: 32px;">
true to enable, false to disable. No other arguments are required when disabling.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> srcBlend</span>
</p>
<div style="margin-left: 32px;">
The source color blend function <a href="/page/Enums/BLEND" title="Enums/BLEND">BLEND_ Enums</a>. Determines how a rendered texture's final color should be calculated.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> destBlend</span>
</p>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_4">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> srcBlendAlpha=nil</span>
</p>
<div style="margin-left: 32px;">
The source alpha blend function <a href="/page/Enums/BLEND" title="Enums/BLEND">BLEND_ Enums</a>. Determines how a rendered texture's final alpha should be calculated.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_5">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_number" title="Category:number">number</a> destBlendAlpha=nil</span>
</p>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>In this example we draw a lightning bolt over our player's head.
</p><p>We shouldn't really draw the lightning in the PreDrawTranslucentRenderables hook as this causes issues rendering transparent objects behind the lightning, but it's a quick example of how the function works. Normally it should be drawn in a custom lua effect's <a href="/page/Category_colon_EFFECT_Hooks" title="Category:EFFECT Hooks">EFFECT</a>:<a href="/page/EFFECT/Render" title="EFFECT/Render">Render</a>.
</p>
<pre><code data-language="lua">-- Our sprite texture to render. Rendering this texture without
-- render.OverrideBlendFunc will result in black borders around the lightning beam.
local lightningMaterial = Material(&quot;sprites/lgtning&quot;)

function GM:PreDrawTranslucentRenderables(isDrawingDepth, isDrawingSkybox)

	if isDrawingDepth or isDrawSkybox then return end

	local ply = Entity(1)

	if&#160;!IsValid(ply) then return end

	-- Calculate a random UV to use for the lightning to give it some movement
	local uv = math.Rand(0, 1)

	-- Enable blend override to interpret the color and alpha from the texture.
	render.OverrideBlendFunc( true, BLEND_SRC_COLOR, BLEND_SRC_ALPHA, BLEND_ONE, BLEND_ZERO)

	render.SetMaterial(lightningMaterial)

	-- Render a lightning beam along points randomly offset from a line above the player.
	render.StartBeam(5)
	render.AddBeam(ply:GetPos() + Vector(0,0,035), 20, uv, Color(255,255,255,255))
	render.AddBeam(ply:GetPos() + Vector(0,0,135) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*2, Color(255,255,255,255))
	render.AddBeam(ply:GetPos() + Vector(0,0,235) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*3, Color(255,255,255,255))
	render.AddBeam(ply:GetPos() + Vector(0,0,335) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*4, Color(255,255,255,255))
	render.AddBeam(ply:GetPos() + Vector(0,0,435) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*5, Color(255,255,255,255))
	render.EndBeam()

	 -- Disable blend override
	render.OverrideBlendFunc( false )

end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;"><a href="/page/File:overrideblendfunc_example.png" class="image" title="overrideblendfunc_example.png"><img alt="overrideblendfunc_example.png" src="/images/8/84/overrideblendfunc_example.png" width="421" height="480" /></a></div>


