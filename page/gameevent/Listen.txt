<div class="function_line">
<span class="shared" title="Shared">&#160;</span>gameevent.Listen( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=gameevent.Listen">Search on GitHub</a> - <a href="/page/Special:WhatLinksHere/gameevent/Listen" title="Special:WhatLinksHere/gameevent/Listen">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">3.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">4.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_3"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_3"><span class="tocnumber">5.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_4"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_4"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_5"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_5"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_6"><span class="tocnumber">8</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_6"><span class="tocnumber">8.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_7"><span class="tocnumber">9</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_7"><span class="tocnumber">9.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Add a game event listener.
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> eventName</span>
</p>
<div style="margin-left: 32px;">
<p>The event to listen to, travels through hooks with eventName as event.<br />
</p>
List of valid events can be found <a href="/page/Game_Events" title="Game Events">here</a>.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Announce to everyone that a player has connected.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_connect&quot; )
hook.Add(&quot;player_connect&quot;, &quot;AnnounceConnection&quot;, function( data )
	for k,v in pairs( player.GetAll() ) do
		v:ChatPrint( data.name .. &quot; has connected to the server.&quot; )
	end
end)</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">"Shinycow has connected to the server."</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_connect. player_connect is triggered at the exact moment they join the server.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_connect&quot; )
hook.Add( &quot;player_connect&quot;, &quot;player_connect_example&quot;, function( data )
	local name = data.name			// Same as Player:Nick()
	local steamid = data.networkid	// Same as Player:SteamID()
	local ip = data.address			// Same as Player:IPAddress()
	local id = data.userid			// Same as Player:UserID()
	local bot = data.bot			// Same as Player:IsBot()
	local index = data.index		// Same as Player:EntIndex()

	// Player has connected; this happens instantly after they join -- do something..

end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_3">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_3">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_disconnect. player_disconnect is triggered at the exact moment they disconnect from the server and will ALWAYS trigger regardless of whether they time-out, are kick/banned, client crashes, they click the X, they type quit in console, etc...
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_disconnect&quot; )
hook.Add( &quot;player_disconnect&quot;, &quot;player_disconnect_example&quot;, function( data )
	local name = data.name			// Same as Player:Nick()
	local steamid = data.networkid		// Same as Player:SteamID()
	local id = data.userid			// Same as Player:UserID()
	local bot = data.bot			// Same as Player:IsBot()
	local reason = data.reason		// Text reason for disconnected such as &quot;Kicked by console!&quot;, &quot;Timed out!&quot;, etc...

	// Player has disconnected - this is more reliable than PlayerDisconnect
	
end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_4">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_4">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_spawn. player_spawn is triggered when the player initially spawns, or respawns.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_spawn&quot; )
hook.Add( &quot;player_spawn&quot;, &quot;player_spawn_example&quot;, function( data ) 
	local id = data.userid	// Same as Player:UserID()

	// Called when the player spawns initially or respawns.

end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_5">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_5">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_hurt. player_hurt is triggered when the player is injured or dies.
</p><p>The SERVER receives 1 extra value - Priority.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_hurt&quot; )
hook.Add( &quot;player_hurt&quot;, &quot;player_hurt_example&quot;, function( data ) 
	local health = data.health				// Remaining health after injury
	local priority = SERVER and data.Priority or 5 		// Priority&#160;??
	local id = data.userid					// Same as Player:UserID()
	local attackerid = data.attacker			// Same as Player:UserID() but it's the attacker id.

	// Called when the player is injured or dies.

end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_6">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_6">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_hurt. player_hurt is triggered when the player is injured or dies.
</p><p>The SERVER receives 1 extra value - Priority.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;player_say&quot; )
hook.Add( &quot;player_say&quot;, &quot;player_say_example&quot;, function( data ) 
	local priority = SERVER and data.Priority or 1 	// Priority&#160;??
	local id = data.userid				// Same as Player:UserID() for the speaker
	local text = data.text				// The written text.

	// Called when a player writes text ( Called by the SERVER on the client AFTER the PlayerSay hook )

end )</code></pre>
<p><br />
</p>
<h1 class="first_example"> <span class="mw-headline" id="Examples_7">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_7">Example</span></h2>
<p>This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: entity_killed. entity_killed is triggered when the player or entity dies.
</p>
<pre><code data-language="lua">gameevent.Listen( &quot;entity_killed&quot; )
hook.Add( &quot;entity_killed&quot;, &quot;entity_killed_example&quot;, function( data ) 
	local inflictor_index = data.entindex_inflictor		// Same as Weapon:EntIndex() / weapon used to kill victim
	local attacker_index = data.entindex_attacker		// Same as Player/Entity:EntIndex() / person or entity who did the damage
	local damagebits = data.damagebits			// DAMAGE_TYPE - use BIT operations to decipher damage types...
	local victim_index = data.entindex_killed		// Same as Victim:EntIndex() / the entity / player victim

	// Called when a Player or Entity is killed

end )</code></pre>
<p><br />
</p>


