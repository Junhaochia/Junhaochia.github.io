<p>Sometimes you may wish to create a custom VGUI Panel for an addon or gamemode.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Create_a_Table"><span class="tocnumber">1</span> <span class="toctext">Create a Table</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Then_Add_Functions"><span class="tocnumber">2</span> <span class="toctext">Then Add Functions</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Finally_We_Register"><span class="tocnumber">3</span> <span class="toctext">Finally We Register</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Result"><span class="tocnumber">4</span> <span class="toctext">Result</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Complete_Code"><span class="tocnumber">5</span> <span class="toctext">Complete Code</span></a></li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Create_a_Table"> Create a Table </span></h1>
<p>The first step in creating a custom VGUI Panel is to create a table.
</p>
<pre><code data-language="lua">local PANEL = {}</code></pre>
<h1> <span class="mw-headline" id="Then_Add_Functions"> Then Add Functions </span></h1>
<p>We can give our table a function so Garry's Mod knows what to do to it when it's initialized.
</p>
<pre><code data-language="lua">
function PANEL:Init()
    self:SetSize( 100, 100 )
    self:Center()
end
</code></pre>
<p>We use <i><b>self:SetSize( 100, 100 )</b></i> to set the size of our panel to 100 pixels wide and 100 pixels tall. <i><b>self:Center()</b></i> centers our panel in the middle of our parent (if no parent is given it will center the panel in the middle of the screen).
</p><p>We can also give our table a function to tell Garry's Mod what we should do when we want to paint the panel on the screen.
</p>
<pre><code data-language="lua">
function PANEL:Paint( w, h )
    draw.RoundedBox( 0, 0, 0, w, h, Color(0,0,0,255) )
end
</code></pre>
<p>In this function we call <i><b>draw.RoundedBox(..)</b></i> to draw our panel with the dimensions defined in <i><b>self:SetSize()</b></i>. We start at 0,0 because this is the top-most-left-most point in our panel.
</p>
<h1> <span class="mw-headline" id="Finally_We_Register"> Finally We Register </span></h1>
<p>The final step in creating a custom VGUI Panel is to <a href="/page/vgui/Register" title="vgui/Register">register the table</a>.
</p>
<pre><code data-language="lua">
vgui.Register( &quot;MyFirstPanel&quot;, PANEL, &quot;Panel&quot; )
</code></pre>
<p>Where;
<i><b>"MyFirstPanel"</b></i> is the desired name of your panel to be used when you wish to create it. <i><b>PANEL</b></i> is the table we have created and <i><b>"Panel"</b></i> is the type of element you wish to use as a base.
</p>
<h1> <span class="mw-headline" id="Result">Result</span></h1>
<p>You can now create your custom panel by using
</p>
<pre><code data-language="lua">local pnl = vgui.Create( &quot;MyFirstPanel&quot;, parentpanel )</code></pre>
<p>or
</p>
<pre><code data-language="lua">local pnl = parentpanel:Add( &quot;MyFirstPanel&quot; )</code></pre>
<h1> <span class="mw-headline" id="Complete_Code"> Complete Code </span></h1>
<pre><code data-language="lua">
local PANEL = {}

function PANEL:Init()
    self:SetSize( 100, 100 )
    self:Center()
end

function PANEL:Paint( w, h )
    draw.RoundedBox( 0, 0, 0, w, h, Color(0,0,0,255) )
end

vgui.Register( &quot;MyFirstPanel&quot;, PANEL, &quot;Panel&quot; )
</code></pre>


