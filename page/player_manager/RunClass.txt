<div class="function_line">
<span class="shared" title="Shared">&#160;</span>player_manager.RunClass( <span class="function_args"></span> ) </div><div class="gmodwiki_useful_links"><a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/search?utf8=âœ“&amp;q=player_manager.RunClass">Search on GitHub</a> - <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/modules/player_manager.lua#L395-L405">View Source</a> - <a href="/page/Special:WhatLinksHere/player_manager/RunClass" title="Special:WhatLinksHere/player manager/RunClass">What links here?</a></div>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Arguments"><span class="tocnumber">2</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_2"><span class="tocnumber">3</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Arguments_3"><span class="tocnumber">4</span> <span class="toctext">Arguments</span></a></li>
<li class="toclevel-1"><a href="#Returns"><span class="tocnumber">5</span> <span class="toctext">Returns</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">6</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">6.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Examples_2"><span class="tocnumber">7</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">7.1</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h1> <span class="mw-headline" id="Description">Description</span></h1>
<p>Execute a named function within the player's set class
</p>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_Player" title="Category:Player">Player</a> ply</span>
</p>
<div style="margin-left: 32px;">
Player to execute function on.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_2">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_string" title="Category:string">string</a> funcName</span>
</p>
<div style="margin-left: 32px;">
Name of function.</div>
</div>
<h1 class="first_arg"> <span class="mw-headline" id="Arguments_3">Arguments</span></h1>
<div class="argument">
<p><span class="arg_number"></span> <span class="arg_chunk"><a href="/page/Category_colon_vararg" title="Category:vararg">vararg</a> arguments</span>
</p>
<div style="margin-left: 32px;">
Optional arguments. Can be of any type.</div>
</div>
<h1 class="first_ret"> <span class="mw-headline" id="Returns">Returns</span></h1>
<div class="return" style="counter-increment: returns;">
<p><span class="ret_number" style="counter-increment: returns -1;"></span> <span class="ret_chunk"><a href="/page/Category_colon_vararg" title="Category:vararg">vararg</a></span>
</p>
<div style="margin-left: 32px;">
The values returned by the called function.</div>
</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example">Example</span></h2>
<p>Run the player's class 'Loadout' function when PlayerLoadout is called
</p>
<pre><code data-language="lua">function GM:PlayerLoadout( ply )

	player_manager.RunClass( ply, &quot;Loadout&quot; )
 
end</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">The player's class 'Loadout' function is executed</div>
<h1 class="first_example"> <span class="mw-headline" id="Examples_2">Examples</span></h1>
<h2 class="examples_number"> <span class="mw-headline" id="Example_2">Example</span></h2>
<p>Call a greeting function within the playerclass system.
</p>
<pre><code data-language="lua">local PLAYER = {}
PLAYER.DisplayName = &quot;Hooman&quot;
PLAYER.WalkSpeed = 200
PLAYER.greet = function( tbl ) // create a function named 'greet'
// the first argument passed is the source table
// which includes the classID, the player entity, and the function itself
	local ply = tbl.Player // here we extract the player entity from the table
    ply:ChatPrint(&quot;Hello &quot;..ply:Nick()..&quot;&#160;!&quot;) // tell the player
end

// link it to the spawn hook, so each time a player (re-)spawns, he will be greeted with a hello
hook.Add(&quot;PlayerSpawn&quot;,&quot;greet&quot;,function(ply)
	player_manager.RunClass( ply, &quot;greet&quot; )
end)</code></pre>
<p><b>Output:</b>
</p>
<div style="margin:2em;">Hello Flowx&#160;!</div>


