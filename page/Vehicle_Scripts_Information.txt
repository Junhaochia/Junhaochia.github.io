<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Intro"><span class="tocnumber">1</span> <span class="toctext">Intro</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Known_components"><span class="tocnumber">2</span> <span class="toctext">Known components</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Accessing_values_in_Lua"><span class="tocnumber">3</span> <span class="toctext">Accessing values in Lua</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Links_.26_Tools"><span class="tocnumber">4</span> <span class="toctext">Links &amp; Tools</span></a></li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Intro"> Intro </span></h2>
<p>The goal of this tutorial is to provide a maximum of information about vehicle scripts, which are an important origin of mistakes.
</p><p>Vehicle scripts are <b>.txt</b> files that provide working parameters of <b>prop_vehicle_jeep</b> (4-wheel vehicles) and <b>prop_vehicle_airboat</b> (4-floating-spot vehicles) entities. They are necessary for <b>prop_vehicle_prisoner_pod</b> entities (seats) as well but the standard script <b>prisoner_pod.txt</b> is usually fine.
</p><p>They are located in <i>&lt;base_folder&gt;/scripts/vehicles/</i> where <i>&lt;base_folder&gt;</i> is the <b>garrysmod</b> directory (next to addons) or the root directory of an addon. Default vehicle scripts are <a rel="nofollow" class="external text" href="https://github.com/Facepunch/garrysmod/tree/master/garrysmod/scripts/vehicles">available here</a>.
</p><p>When editing a vehicle script, please note that once applied on a vehicle, it is loaded and any further modification is ignored. It can be reloaded by changing the map or by running the <b>vehicle_flushscript</b> concommand.
</p>
<h2> <span class="mw-headline" id="Known_components"> Known components </span></h2>
<p>There are a certain number of components. You should respect the layout of default vehicle scripts when editing the values.
</p><p>The "vehicle" category defines the specifications of the body, the engine, the gearbox, the steering, the wheels and the suspensions.
</p>
<table class="wikitable">
<tr>
<th colspan="4">Category "vehicle"
</th></tr>
<tr>
<th>Parameter
</th>
<th>Unit
</th>
<th>Description
</th>
<th>Usage
</th></tr>
<tr>
<td>"wheelsperaxle"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"body"
</td>
<td>Structure
</td>
<td>Physical properties of the body
</td>
<td>
</td></tr>
<tr>
<td>"body" → "countertorquefactor"
</td>
<td>ratio
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"body" → "massCenterOverride"
</td>
<td>in
<p>x y z
</p>
</td>
<td>The center of gravity
<p>It should be set to somewhere under the vehicle to make it stable, in order to overcome the chassis that is replaced with a uniform volumetric weight distribution. The mass of wheels will help with stability too.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"body" → "massoverride"
</td>
<td>kg
</td>
<td>The mass value, overriding the mass of the 3D model
</td>
<td>
</td></tr>
<tr>
<td>"body" → "addgravity"
</td>
<td>ratio
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"body" → "maxAngularVelocity"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"engine"
</td>
<td>Structure
</td>
<td>Engine and gearbox characteristics
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "horsepower"
</td>
<td>
</td>
<td>The base power value of the vehicle.
<p>The unit does not seem similar to kW or bhp. I suggest twice the value in bhp to begin with.
</p><p>Combined with "maxrpm", it actually defines the constant torque of the engine.
</p>
</td>
<td>Used only by <b>prop_vehicle_jeep</b>
</td></tr>
<tr>
<td>"engine" → "maxrpm"
</td>
<td>RPM
</td>
<td>The RPM of the engine that is used to calculate the constant torque of the engine.
<table cellspacing="0" class="gmodwiki_note warning_note">
<tr>
<td>WARNING
</td>
<td>
<p>If the engine exceeds this value, the gearbox will give the same torque output as for the gear 0, making an over-rev boost.
</p>
</td></tr></table>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "maxspeed"
</td>
<td>MPH
</td>
<td>The maximum forward speed under normal conditions
<p>For <b>prop_vehicle_airboat</b>, this scales the forward engine power as well.
</p><p>See "autobrakeSpeedGain" and "autobrakeSpeedFactor".
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "maxReverseSpeed"
</td>
<td>MPH
</td>
<td>The maximum backward speed under normal conditions
<p>For <b>prop_vehicle_airboat</b>, this scales the backward engine power as well.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>The vehicle will accelerate slower when this limit is reached.
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>No backward speed limit applies under active boost.
</p>
</td></tr></table>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "autobrakeSpeedGain"
</td>
<td>ratio
</td>
<td>This is the ratio of the max speed value at which the brake is activated in order to reduce the speed.
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "autobrakeSpeedFactor"
</td>
<td>ratio
</td>
<td>This defines how much brake will be applied when exceeding {the forward max speed} times {the "autobrakeSpeedGain" ratio}.
<p>The value does not seem to apply in reverse.
</p><p>I currently do not know if this value applies under boost.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "autotransmission"
</td>
<td>0/1
</td>
<td>When 0, the RPM simulation is disabled and the gearbox will always give the torque output of the gear 0.
<p>When 1, the gearbox instantaneously shifts gears automatically, but it upshifts in downhills only if the <b>+forward</b> key is pressed. It acts like an automatic sequential gearbox or an automatic dual-clutch transmission without prediction errors.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "axleratio"
</td>
<td>ratio
</td>
<td>Gearbox: final ratio
<p>It is like a "master ratio" affecting all the gears.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "gear"
</td>
<td>ratio
</td>
<td>Gearbox: gear 0 ratio, aka. 1st gear
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>You can comment out one of the first gears or more if you experience spinning wheels.
</p>
</td></tr></table>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "gear"
</td>
<td>ratio
</td>
<td>Gearbox: gear 1 ratio, aka. 2nd gear
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "gear"
</td>
<td>ratio
</td>
<td>etc.
<p>Add the desired number of gears. There must be at least 1 gear ratio.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "shiftuprpm"
</td>
<td>RPM
</td>
<td>The RPM at which the gearbox decides to shift up.
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>The upshift will only happen if the RPM calculated with the next gear is greater than "shiftdownrpm".
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>When the "shiftdownrpm" and the "shiftuprpm" conditions are very close to each other, the gearbox can continuously shift gears for a little while. This is not a problem, but there is a concern if you display the RPM or the gear number, or if you make your own engine sound.
</p>
</td></tr></table>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "shiftdownrpm"
</td>
<td>RPM
</td>
<td>The RPM at which the gearbox decides to shift down.
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "boost"
</td>
<td>Structure
</td>
<td>Settings of the boost feature, including <i>torqueboost</i> (aka. nitrous oxide) and max speed increase
<p>To fully disable the boost feature, simply remove this structure from the vehicle script.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>For <b>prop_vehicle_airboat</b>, the max speed will be changed but there will be no boost.
</p>
</td></tr></table>
</td>
<td>Optional
</td></tr>
<tr>
<td>"engine" → "boost" → "force"
</td>
<td>
</td>
<td>The amount of boost
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "boost" → "duration"
</td>
<td>s
</td>
<td>The duration of the boost
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>If you just want to change the max speed with no boost, you can set the value to <b>0.0001</b>
</p>
</td></tr></table>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "boost" → "delay"
</td>
<td>s
</td>
<td>The delay to wait after the end of the last boost
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "boost" → "torqueboost"
</td>
<td>
</td>
<td>Behavior of the boost feature
<p>When 0, the rear wheels will spin in the opposite direction.
</p><p>When 1 (or any other value), the behavior is normal.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"engine" → "boost" → "maxspeed"
</td>
<td>MPH
</td>
<td>The maximum forward speed while the <b>+speed</b> key is pressed or the boost is active.
</td>
<td>
</td></tr>
<tr>
<td>"steering"
</td>
<td>Structure
</td>
<td>Steering parameters (front wheels only)
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "degreesSlow"
</td>
<td>degrees
</td>
<td>Steer angle below the "slowcarspeed" speed
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "degreesFast"
</td>
<td>degrees
</td>
<td>Steer angle over the "fastcarspeed" speed and below the "engine" → "maxspeed" speed
<p>Between the "slowcarspeed" and the "fastcarspeed" speeds, the steer angle is interpolated.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "degreesBoost"
</td>
<td>degrees
</td>
<td>Steer angle over the "engine" → "boost" → "maxspeed" speed
<p>Between the "engine" → "maxspeed" and the "engine" → "boost" → "maxspeed" speeds, the steer angle is interpolated.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "steeringExponent"
</td>
<td>exponent
</td>
<td>When 0, the steering speed is constant (easier for network games).
<p>Otherwise the value is an exponent meant to steer faster and faster.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "slowcarspeed"
</td>
<td>MPH
</td>
<td>The speed below which the maximum steer angle is the "degreesSlow" angle
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "fastcarspeed"
</td>
<td>MPH
</td>
<td>The speed over which the maximum steer angle is the "degreesFast" angle
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "slowSteeringRate"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "fastSteeringRate"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "steeringRestRateSlow"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "steeringRestRateFast"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "turnThrottleReduceSlow"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "turnThrottleReduceFast"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "brakeSteeringRateFactor"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "throttleSteeringRestRateFactor"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "boostSteeringRestRateFactor"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "boostSteeringRateFactor"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "powerSlideAccel"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "skidallowed"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"steering" → "dustcloud"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle"
</td>
<td>Structure
</td>
<td>Properties of the front axle
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel"
</td>
<td>Structure
</td>
<td>Characteristics of wheels on this axle
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "radius"
</td>
<td>in
</td>
<td>The radius of the wheels on this axle
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "mass"
</td>
<td>kg?
</td>
<td>The mass of each wheel on this axle
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "inertia"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "damping"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "rotdamping"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "material"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "skidmaterial"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "wheel" → "brakematerial"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension"
</td>
<td>Structure
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension" → "springConstant"
</td>
<td>
</td>
<td>The height of the body over the wheel axle
<p>To adjust this value, you can move your vehicle to a flat horizontal surface and monitor the poseparameter of every wheel, namely <b>vehicle_wheel_fl_height</b>, <b>vehicle_wheel_fr_height</b>, <b>vehicle_wheel_rl_height</b>, <b>vehicle_wheel_rr_height</b> (their value should vary between 0 {compressed} and 1 {extended}).
</p>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension" → "springDamping"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension" → "stabilizerConstant"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension" → "springDampingCompression"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "suspension" → "maxBodyForce"
</td>
<td>
</td>
<td>Defines how much springs will be squeezed under weight.
<p>This value is scaled with the "body" → "massoverride" mass so it does not need to be adjusted.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "torquefactor"
</td>
<td>ratio
</td>
<td>Center differential: ratio of the total torque to be applied on this axle
<p>The sum of {the value for the front axle} and {the value of the rear axle} should equal 1.0, but this is not a requirement.
</p><p>Note that the front differential, the read differential and the center differential are all open differentials.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"axle" → "brakefactor"
</td>
<td>ratio
</td>
<td>Brakeforce distribution: ratio of the total brakeforce to be applied on this axle
<p>The sum of {the value for the front axle} and {the value of the rear axle} should equal 1.0, but this is not a requirement.
</p>
</td>
<td>
</td></tr>
<tr>
<td>"axle"
</td>
<td>Structure
</td>
<td>Properties of the rear axle
<p>The structure is identical to that of the front axle.
</p>
</td>
<td>
</td></tr></table>
<p>The "vehicle_sounds" category defines vehicle sounds.
</p>
<table class="wikitable">
<tr>
<th colspan="4">Category "vehicle_sounds"
</th></tr>
<tr>
<th>Parameter
</th>
<th>Unit
</th>
<th>Description
</th>
<th>Usage
</th></tr>
<tr>
<td>"gear"
</td>
<td>Structure
</td>
<td>Each gear is specified with a few values
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>If you do not use the engine sound system of Garry's Mod, you can remove them all.
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>The gears used for sounds are totally independent of the gears defined in the "vehicle" category.
</p>
</td></tr></table>
</td>
<td>Optional
</td></tr>
<tr>
<td>"gear" → "max_speed"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"gear" → "speed_approach_factor"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"gear"
</td>
<td>Structure
</td>
<td>etc.
</td>
<td>Optional
</td></tr>
<tr>
<td>"state"
</td>
<td>Structure
</td>
<td>Each state has a name and uses a sound, plus optionally a minimum play time.
<p>The current state depends on the gears and the driver input.
</p>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>If you do not use the engine sound system of Garry's Mod, you can remove them all.
</p>
</td></tr></table>
</td>
<td>Optional
</td></tr>
<tr>
<td>"state" → "name"
</td>
<td>
</td>
<td>The name of the state.
</td>
<td>
</td></tr>
<tr>
<td>"state" → "sound"
</td>
<td>
</td>
<td>The name of the sound that should be played during that state.
</td>
<td>
</td></tr>
<tr>
<td>"state" → "min_time"
</td>
<td>s
</td>
<td>Minimum duration of the sound state
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>A few states such as <i>SS_START_IDLE</i> seem to get forced stopped before this duration is elapsed.
</p>
</td></tr></table>
<table cellspacing="0" class="gmodwiki_note">
<tr>
<td>NOTE
</td>
<td>
<p>The value does not take effect on every state.
</p>
</td></tr></table>
</td>
<td>Optional
</td></tr>
<tr>
<td>"state"
</td>
<td>Structure
</td>
<td>etc.
</td>
<td>Optional
</td></tr>
<tr>
<td>"crashsound"
</td>
<td>Structure
</td>
<td>Each crash sound is defined with a few properties.
</td>
<td>
</td></tr>
<tr>
<td>"crashsound" → "min_speed"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"crashsound" → "min_speed_change"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"crashsound" → "sound"
</td>
<td>
</td>
<td>The name of the sound that should be played for that crash event.
</td>
<td>
</td></tr>
<tr>
<td>"crashsound" → "gear_limit"
</td>
<td>
</td>
<td>
</td>
<td>Optional
</td></tr>
<tr>
<td>"crashsound"
</td>
<td>Structure
</td>
<td>etc.
</td>
<td>
</td></tr>
<tr>
<td>"skid_lowfriction"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"skid_normalfriction"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr>
<tr>
<td>"skid_highfriction"
</td>
<td>
</td>
<td>
</td>
<td>
</td></tr></table>
<p>You actually can add your own components as the game will ignore them.
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Accessing_values_in_Lua"> Accessing values in Lua </span></h2>
<pre><code data-language="lua">
local veh = ents.FindByClass( &quot;prop_vehicle_*&quot; )[1]
if IsValid( veh ) and veh:IsVehicle() then
	-- Print in console the content of the vehicle script:
	local scriptPath
	if SERVER then
		scriptPath = veh:GetKeyValues().VehicleScript
	else
		-- This only works if Vehicle:SetVehicleClass() was called (as done by Sandbox spawn menu).
		local spawnData = list.Get( &quot;Vehicles&quot; )[veh:GetVehicleClass()]
		if spawnData and spawnData.KeyValues then
			for key, keyValue in pairs( spawnData.KeyValues ) do
				if string.lower( key ) == &quot;vehiclescript&quot; then
					scriptPath = keyValue
					break
				end
			end
		end
	end
	if scriptPath ~= nil and string.len( scriptPath ) ~= 0 then
		local scriptContent = util.KeyValuesToTablePreserveOrder( file.Read( scriptPath, &quot;GAME&quot; ) ) -- This table should be cached.
		print( &quot;----- veh: vehicle script content =&quot; )
		PrintTable( scriptContent )
	end
	
	if SERVER then -- server-side only
		-- Print in console the loaded content of the vehicle script:
		print( &quot;----- veh:GetVehicleParams() =&quot; )
		PrintTable( veh:GetVehicleParams() )
		
		-- Print in console the current operating values of the vehicle:
		print( &quot;----- veh:GetOperatingParams() =&quot; )
		PrintTable( veh:GetOperatingParams() ) -- nil for some entity classes (prop_vehicle_prisoner_pod, etc.)
	end
end
</code></pre>
<p>Client-side, you can only read the content of the vehicle script, if the client has the file. But unfortunately the path of the vehicle script is not available from the vehicle.
</p>
<h2> <span class="mw-headline" id="Links_.26_Tools"> Links &amp; Tools </span></h2>
<ul><li> <a rel="nofollow" class="external text" href="https://steamcommunity.com/sharedfiles/filedetails/?id=1858793462">MR's On-board Diagnostics GUI</a>
</li><li> <a rel="nofollow" class="external text" href="https://steamcommunity.com/sharedfiles/filedetails/?id=345123840">VCMod Handling Editor</a>
</li><li> Feel free to complete the list!
</li></ul>


